<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.Http.OData</name>
  </assembly>
  <members>
    <member name="T:System.Net.Http.ODataHttpRequestMessageExtensions">
      <summary> Fournit des méthodes d'extension pour la classe <see cref="T:System.Net.Http.HttpRequestMessage" />. </summary>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.CreateODataErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,Microsoft.Data.OData.ODataError)">
      <summary> Méthode d'assistance qui effectue la négociation de contenu et crée une instance <see cref="T:System.Net.Http.HttpResponseMessage" /> représentant une erreur avec une instance de &lt;voir cref="T:System.Net.Http.ObjectContent`1" /&gt; encapsulant oDataError comme contenu. Si aucun formateur n'est trouvé, cette méthode retourne une réponse avec l'état 406 Non acceptable. </summary>
      <returns>Réponse d'erreur encapsulant oDataError avec le code d'état statusCode.</returns>
      <param name="request">Demande.</param>
      <param name="statusCode">Code d'état de la réponse créée.</param>
      <param name="oDataError">Erreur OData à encapsuler.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetEdmModel(System.Net.Http.HttpRequestMessage)">
      <summary> Extrait le modèle EDM associé à la demande. </summary>
      <returns>Modèle EDM associé à cette demande, ou valeur Null si le modèle n'existe pas.</returns>
      <param name="request">Demande.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetInlineCount(System.Net.Http.HttpRequestMessage)">
      <summary> Obtient le comptage inline à utiliser dans la réponse OData. </summary>
      <returns>Comptage inline à renvoyer ou valeur Null si aucun comptage inline n'est défini.</returns>
      <param name="request">Demande.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetNextPageLink(System.Net.Http.HttpRequestMessage)">
      <summary> Obtient le lien vers la page suivante à utiliser dans la réponse OData. </summary>
      <returns>Lien vers la page suivante à renvoyer ou valeur Null si aucun lien vers la page suivante n'est défini.</returns>
      <param name="request">Demande.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetODataPath(System.Net.Http.HttpRequestMessage)">
      <summary> Obtient le chemin d'accès OData de la demande. </summary>
      <returns>Chemin d'accès OData de la demande.</returns>
      <param name="request">Demande.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetODataPathHandler(System.Net.Http.HttpRequestMessage)">
      <summary> Obtient l'instance <see cref="T:System.Web.Http.OData.Routing.IODataPathHandler" /> à utiliser pour générer des liens. </summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Routing.IODataPathHandler" /> à utiliser pour générer des liens.</returns>
      <param name="request">Demande.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetODataRouteName(System.Net.Http.HttpRequestMessage)">
      <summary> Récupère le nom de l'itinéraire à utiliser pour générer des liens OData. </summary>
      <returns>Nom de l'itinéraire à utiliser pour générer des liens OData associés à cette demande ou valeur Null si le nom de l'itinéraire n'existe pas.</returns>
      <param name="request">Demande.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.GetODataRoutingConventions(System.Net.Http.HttpRequestMessage)">
      <summary> Obtient les conventions d'itinéraire OData à utiliser pour la sélection d'action et de contrôleur. </summary>
      <returns>Conventions d'itinéraire OData à utiliser pour la sélection d'action et de contrôleur associés à cette demande ou valeur Null si les conventions d'itinéraire n'existent pas.</returns>
      <param name="request">Demande.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetEdmModel(System.Net.Http.HttpRequestMessage,Microsoft.Data.Edm.IEdmModel)">
      <summary> Associe le modèle EDM donné à cette demande. </summary>
      <param name="request">Demande.</param>
      <param name="model">Modèle EDM à associer à cette demande.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetInlineCount(System.Net.Http.HttpRequestMessage,System.Int64)">
      <summary> Définit le comptage inline à utiliser dans la réponse OData. </summary>
      <param name="request">Demande.</param>
      <param name="inlineCount">Comptage inline à renvoyer au client.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetNextPageLink(System.Net.Http.HttpRequestMessage,System.Uri)">
      <summary> Définit le lien vers la page suivante à utiliser dans la réponse OData. </summary>
      <param name="request">Demande.</param>
      <param name="nextPageLink">Lien vers la page suivante à renvoyer au client.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetODataPath(System.Net.Http.HttpRequestMessage,System.Web.Http.OData.Routing.ODataPath)">
      <summary> Définit le chemin d'accès OData de la demande. </summary>
      <param name="request">Demande.</param>
      <param name="odataPath">Chemin d'accès OData de la demande.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetODataPathHandler(System.Net.Http.HttpRequestMessage,System.Web.Http.OData.Routing.IODataPathHandler)">
      <summary> Définit l'instance <see cref="T:System.Web.Http.OData.Routing.IODataPathHandler" /> à utiliser pour générer des liens. </summary>
      <param name="request">Demande.</param>
      <param name="pathHandler">
        <see cref="T:System.Web.Http.OData.Routing.IODataPathHandler" /> à utiliser pour générer des liens.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetODataRouteName(System.Net.Http.HttpRequestMessage,System.String)">
      <summary> Définit le nom de l'itinéraire donné à utiliser pour générer des liens OData. </summary>
      <param name="request">Demande.</param>
      <param name="routeName">Nom de l'itinéraire à utiliser pour générer des liens OData.</param>
    </member>
    <member name="M:System.Net.Http.ODataHttpRequestMessageExtensions.SetODataRoutingConventions(System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention})">
      <summary> Définit les conventions d'itinéraire OData à utiliser pour la sélection d'action et de contrôleur. </summary>
      <param name="request">Demande.</param>
      <param name="routingConventions">Conventions d'itinéraire OData à utiliser pour la sélection d'action et de contrôleur.</param>
    </member>
    <member name="T:System.Web.Http.ODataHttpConfigurationExtensions"></member>
    <member name="M:System.Web.Http.ODataHttpConfigurationExtensions.EnableQuerySupport(System.Web.Http.HttpConfiguration)">
      <summary>Active la prise en charge de la requête pour les actions ayant un type de retour <see cref="T:System.Linq.IQueryable" /> ou <see cref="T:System.Linq.IQueryable`1" />. Pour éviter le traitement de requêtes inattendues ou malveillantes, utilisez les paramètres de validation définis sur <see cref="T:System.Web.Http.QueryableAttribute" /> pour valider les requêtes entrantes. Pour plus d'informations, consultez http://go.microsoft.com/fwlink/?LinkId=279712.            </summary>
      <param name="configuration">Configuration du serveur.</param>
    </member>
    <member name="M:System.Web.Http.ODataHttpConfigurationExtensions.EnableQuerySupport(System.Web.Http.HttpConfiguration,System.Web.Http.Filters.IActionFilter)">
      <summary>Active la prise en charge de la requête pour les actions ayant un type de retour <see cref="T:System.Linq.IQueryable" /> ou <see cref="T:System.Linq.IQueryable`1" />. . Pour éviter le traitement de requêtes inattendues ou malveillantes, utilisez les paramètres de validation définis sur <see cref="T:System.Web.Http.QueryableAttribute" /> pour valider les requêtes entrantes. Pour plus d'informations, consultez http://go.microsoft.com/fwlink/?LinkId=279712.</summary>
      <param name="configuration">Configuration du serveur.</param>
      <param name="queryFilter">Filtre d'action qui exécute la requête.</param>
    </member>
    <member name="T:System.Web.Http.ODataHttpErrorExtensions">
      <summary>Fournit des méthodes d'extension pour la classe <see cref="T:System.Web.Http.HttpError" />.</summary>
    </member>
    <member name="M:System.Web.Http.ODataHttpErrorExtensions.ToODataError(System.Web.Http.HttpError)">
      <summary>Convertit <paramref name="httpError" /> en <see cref="T:Microsoft.Data.OData.ODataError" />.</summary>
      <returns>Retourne <see cref="T:Microsoft.Data.OData.ODataError" />.</returns>
      <param name="httpError">Instance <see cref="T:System.Web.Http.HttpError" /> à convertir.</param>
    </member>
    <member name="T:System.Web.Http.ODataHttpRouteCollectionExtensions">
      <summary>Fournit des méthodes d'extension pour la classe <see cref="T:System.Web.Http.HttpRouteCollection" />.</summary>
    </member>
    <member name="M:System.Web.Http.ODataHttpRouteCollectionExtensions.MapODataRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,Microsoft.Data.Edm.IEdmModel)">
      <summary>Mappe l'itinéraire OData spécifié sans préfixe d'itinéraire et avec le nom d'itinéraire OData par défaut.</summary>
      <param name="routes">Collection des itinéraires de l'application.</param>
      <param name="routeName">Nom de l'itinéraire à mapper.</param>
      <param name="routePrefix">Préfixe à a	jouter au modèle de chemin d'accès de l'itinéraire OData.</param>
      <param name="model">Modèle EDM à utiliser pour l'analyse des chemins d'accès OData.</param>
    </member>
    <member name="M:System.Web.Http.ODataHttpRouteCollectionExtensions.MapODataRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.IODataPathHandler,System.Collections.Generic.IEnumerable{System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention})">
      <param name="routes">Collection des itinéraires de l'application.</param>
      <param name="routeName">Nom de l'itinéraire à mapper.</param>
      <param name="routePrefix">Préfixe à a	jouter au modèle de chemin d'accès de l'itinéraire OData.</param>
      <param name="model">Modèle EDM à utiliser pour l'analyse des chemins d'accès OData.</param>
      <param name="pathHandler">
        <see cref="T:System.Web.Http.OData.Routing.IODataPathHandler" /> à utiliser pour l'analyse du chemin d'accès OData.</param>
      <param name="routingConventions">Conventions d'itinéraire OData à utiliser pour la sélection d'action et de contrôleur.</param>
    </member>
    <member name="T:System.Web.Http.ODataMediaTypeFormatterCollectionExtensions">
      <summary>Fournit des méthodes d'extension pour la classe <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterCollection" />.</summary>
    </member>
    <member name="M:System.Web.Http.ODataMediaTypeFormatterCollectionExtensions.AddRange(System.Net.Http.Formatting.MediaTypeFormatterCollection,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>Ajoute les éléments de la collection spécifiée à la fin de <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterCollection" />.</summary>
      <param name="collection">Collection à laquelle les éléments doivent être ajoutés.</param>
      <param name="items">Les éléments doivent être ajoutés à la fin de <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterCollection" />. La collection des éléments ne peut pas en tant que telle avoir la valeur Null, mais elle peut contenir des éléments ayant la valeur Null.</param>
    </member>
    <member name="M:System.Web.Http.ODataMediaTypeFormatterCollectionExtensions.InsertRange(System.Net.Http.Formatting.MediaTypeFormatterCollection,System.Int32,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>  Insère les éléments d'une collection dans <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterCollection" />, à l'index spécifié.</summary>
      <param name="collection">Collection à laquelle les éléments doivent être ajoutés.</param>
      <param name="index">Index de base zéro auquel les nouveaux éléments doivent être insérés.</param>
      <param name="items">Les éléments doivent être ajoutés à la fin de <see cref="T:System.Net.Http.Formatting.MediaTypeFormatterCollection" />. La collection des éléments ne peut pas en tant que telle avoir la valeur Null, mais elle peut contenir des éléments ayant la valeur Null.</param>
    </member>
    <member name="T:System.Web.Http.ODataUrlHelperExtensions">
      <summary>Fournit des méthodes d'extension pour la classe <see cref="T:System.Web.Http.Routing.UrlHelper" />.</summary>
    </member>
    <member name="M:System.Web.Http.ODataUrlHelperExtensions.ODataLink(System.Web.Http.Routing.UrlHelper,System.Collections.Generic.IList{System.Web.Http.OData.Routing.ODataPathSegment})">
      <summary>Génère un lien OData.</summary>
      <returns>Retourne <see cref="T:System.String" />.</returns>
      <param name="urlHelper">Assistance d'URL.</param>
      <param name="segments">Segments du chemin d'accès OData.</param>
    </member>
    <member name="M:System.Web.Http.ODataUrlHelperExtensions.ODataLink(System.Web.Http.Routing.UrlHelper,System.String,System.Web.Http.OData.Routing.IODataPathHandler,System.Collections.Generic.IList{System.Web.Http.OData.Routing.ODataPathSegment})">
      <summary>Génère un lien OData à l'aide du gestionnaire de chemins d'accès et du nom d'itinéraire OData de la demande.</summary>
      <returns>Retourne <see cref="T:System.String" />.</returns>
      <param name="urlHelper">Assistance d'URL.</param>
      <param name="routeName">Nom de l'itinéraire OData.</param>
      <param name="pathHandler">Gestionnaire de chemins d'accès à utiliser pour générer le lien.</param>
      <param name="segments">Segments du chemin d'accès OData.</param>
    </member>
    <member name="M:System.Web.Http.ODataUrlHelperExtensions.ODataLink(System.Web.Http.Routing.UrlHelper,System.Web.Http.OData.Routing.ODataPathSegment[])">
      <summary>Génère un lien OData.</summary>
      <returns>Retourne <see cref="T:System.String" />.</returns>
      <param name="urlHelper">Assistance d'URL.</param>
      <param name="segments">Segments du chemin d'accès OData.</param>
    </member>
    <member name="T:System.Web.Http.QueryableAttribute">
      <summary>Cette classe définit un attribut qui peut s'appliquer à une action permettant de formuler une requête à l'aide de la syntaxe de requête OData.  Pour éviter le traitement de requêtes inattendues ou malveillantes, utilisez les paramètres de validation définis sur <see cref="T:System.Web.Http.QueryableAttribute" /> pour valider les requêtes entrantes. Pour plus d'informations, consultez http://go.microsoft.com/fwlink/?LinkId=279712.</summary>
    </member>
    <member name="M:System.Web.Http.QueryableAttribute.#ctor">
      <summary>Active une action du contrôleur pour la prise en charge des paramètres de requête OData.</summary>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.AllowedArithmeticOperators">
      <summary>Obtient ou définit un enum représentant une liste d'opérateurs arithmétiques autorisés, notamment 'add', 'sub', 'mul', 'div', 'mod'.</summary>
      <returns>Retourne <see cref="T:System.Web.Http.OData.Query.AllowedArithmeticOperators" />.</returns>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.AllowedFunctions">
      <summary>Obtient ou définit un enum représentant une liste de fonctions autorisées utilisées dans la requête $filter. </summary>
      <returns>Retourne <see cref="T:System.Web.Http.OData.Query.AllowedFunctions" />.</returns>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.AllowedLogicalOperators">
      <summary>Obtient ou définit un enum représentant une liste d'opérateurs logiques autorisés, comme 'eq', 'ne', 'gt', 'ge', 'lt', 'le', 'and', 'or', 'not'.</summary>
      <returns>Retourne <see cref="T:System.Web.Http.OData.Query.AllowedLogicalOperators" />.</returns>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.AllowedOrderByProperties">
      <summary>Obtient ou définit une chaîne avec une liste de noms de propriétés séparés par une virgule. Le résultat requêtable (queryable) ne peut être trié que par les propriétés définies dans cette liste.</summary>
      <returns>Retourne <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.AllowedQueryOptions">
      <summary>Obtient ou définit les paramètres de la requête qui sont autorisés dans la requête. La valeur par défaut englobe toutes les options de la requête, notamment $filter, $skip, $top, $orderby, $expand, $select, $inlineCount, $format et $skipToken.</summary>
      <returns>Retourne <see cref="T:System.Web.Http.OData.Query.AllowedQueryOptions" />.</returns>
    </member>
    <member name="M:System.Web.Http.QueryableAttribute.ApplyQuery(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQueryOptions)">
      <summary>Applique la requête à IQueryable sur la base de la requête entrante à partir de l'URI et des paramètres de requête.</summary>
      <returns>Retourne <see cref="T:System.Linq.IQueryable" />.</returns>
      <param name="queryable">Instance queryable d'origine à partir du message de réponse.</param>
      <param name="queryOptions">Instance &lt;voir cref="T:System.Web.Http.OData.Query.ODataQueryOptions"/&gt; construite sur la base de la demande entrante.</param>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.EnableConstantParameterization">
      <summary>Obtient ou définit une valeur indiquant si les constantes doivent être paramétrées. Le paramétrage des constantes doit se traduire par de meilleures performances avec Entity Framework.</summary>
      <returns>La valeur par défaut est true.</returns>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.EnsureStableOrdering">
      <summary>Obtient ou définit une valeur indiquant si la composition de la requête doit, au besoin, modifier la requête d'origine pour assurer un ordre de tri stable.</summary>
      <returns>Une valeur true indique que la requête d'origine doit, au besoin, être modifiée pour assurer un ordre de tri stable. Une valeur false indique que l'ordre de tri peut être considéré comme stable sans modification de la requête. Les fournisseurs de requêtes qui assurent un ordre de tri stable doivent définir cette valeur sur false. La valeur par défaut est true.</returns>
    </member>
    <member name="M:System.Web.Http.QueryableAttribute.GetModel(System.Type,System.Net.Http.HttpRequestMessage,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Obtient le modèle EDM pour la requête et le type donnés.</summary>
      <returns>Modèle EDM pour la requête et le type donnés.</returns>
      <param name="elementClrType">Type CLR pour lequel un modèle doit être récupéré.</param>
      <param name="request">Message de demande pour lequel un modèle doit être récupéré.</param>
      <param name="actionDescriptor">Descripteur d'action de l'action faisant l'objet de la requête.</param>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.HandleNullPropagation">
      <summary>Obtient ou définit une valeur indiquant comment la propagation null doit être gérée lors de la composition de requête.</summary>
      <returns>La valeur par défaut est <see cref="F:System.Web.Http.OData.Query.HandleNullPropagationOption.Default" />.</returns>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.MaxAnyAllExpressionDepth">
      <summary>Obtient ou définit la profondeur maximale de n'importe quel élément ou de tous les éléments imbriqués dans la requête.</summary>
      <returns>Profondeur maximale de n'importe quel élément ou de tous les éléments imbriqués dans la requête.</returns>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.MaxNodeCount">
      <summary>Obtient ou définit le nombre maximal de noeuds dans l'arborescence de syntaxe $filter.</summary>
      <returns>  La valeur par défaut est 100.</returns>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.MaxSkip">
      <summary>Obtient ou définit la valeur max. de $skip qu'un client peut demander.</summary>
      <returns>Retourne <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.MaxTop">
      <summary>Obtient ou définit la valeur max. de $top qu'un client peut demander.</summary>
      <returns>Retourne <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="M:System.Web.Http.QueryableAttribute.OnActionExecuted(System.Web.Http.Filters.HttpActionExecutedContext)">
      <summary>Effectue la composition de requête après l'exécution de l'action. Il essaie d'abord de récupérer IQueryable à partir du message de réponse de retour. Ensuite, il valide la requête à partir de l'URI en fonction des paramètres de validation s'appliquant à QueryableAttribute. Enfin, il applique la requête de façon appropriée, et la redéfinit sur le message de réponse.</summary>
      <param name="actionExecutedContext">Contexte lié à cette action, notamment le message de réponse, le message de la demande, HttpConfiguration, etc.</param>
    </member>
    <member name="P:System.Web.Http.QueryableAttribute.PageSize">
      <summary>Obtient ou définit le nombre maximum de résultats de requête à renvoyer aux clients.</summary>
      <returns>  Nombre maximum de résultats de requête à renvoyer aux clients.</returns>
    </member>
    <member name="M:System.Web.Http.QueryableAttribute.ValidateQuery(System.Net.Http.HttpRequestMessage,System.Web.Http.OData.Query.ODataQueryOptions)">
      <summary>Valide la requête OData dans la demande entrante.</summary>
      <param name="request">Demande entrante.</param>
      <param name="queryOptions">Instance <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions" /> construite sur la base de la demande entrante.</param>
    </member>
    <member name="T:System.Web.Http.OData.AsyncEntitySetController`2">
      <summary>Fournit un point de départ pratique pour un contrôleur qui expose un jeu d'entités OData. C'est la version synchrone de <see cref="T:System.Web.Http.OData.AsyncEntitySetController" />.     </summary>
      <typeparam name="TEntity">Type associé au type d'entité du jeu d'entités exposé.</typeparam>
      <typeparam name="TKey">Type associé à la clé d'entité du type d'entité du jeu d'entités exposé.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.#ctor">
      <summary>Initialise une nouvelle instance de <see cref="T:System.Web.Http.OData.AsyncEntitySetController`2" />. </summary>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.CreateEntityAsync(`0)">
      <summary>Cette méthode doit être substituée pour créer une entité dans le jeu d'entités.</summary>
      <returns>Entité créée.</returns>
      <param name="entity">Entité à ajouter au jeu d'entités.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.CreateLink(`1,System.String,System.Uri)">
      <summary>Cette méthode doit être substituée pour gérer les requêtes POST et PUT qui tentent de créer un lien entre deux entités.</summary>
      <returns>Retourne <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="key">Clé de l'entité avec la propriété de navigation.</param>
      <param name="navigationProperty">Nom de la propriété de navigation.</param>
      <param name="link">URI de l'entité du lien.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Delete(`1)">
      <summary>Cette méthode doit être substituée pour gérer les requêtes DELETE afin de supprimer des entités existantes du jeu d'entités.</summary>
      <returns>Retourne <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="key">Clé d'entité de l'entité à supprimer.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.DeleteLink(`1,System.String,System.String)">
      <summary>Cette méthode doit être substituée pour gérer les requêtes DELETE qui tentent de défaire une relation entre deux entités.</summary>
      <returns>Retourne <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="key">Clé de l'entité avec la propriété de navigation.</param>
      <param name="relatedKey">Clé de l'entité associée.</param>
      <param name="navigationProperty">Nom de la propriété de navigation.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.DeleteLink(`1,System.String,System.Uri)">
      <summary>  Cette méthode doit être substituée pour gérer les requêtes DELETE qui tentent de défaire une relation entre deux entités.</summary>
      <returns>Retourne <see cref="T:System.Threading.Tasks.Task" />.</returns>
      <param name="key">Clé de l'entité avec la propriété de navigation.</param>
      <param name="navigationProperty">Nom de la propriété de navigation.</param>
      <param name="link">URI de l'entité à supprimer de la propriété de navigation.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Get">
      <summary>Cette méthode doit être substituée pour gérer les requêtes GET qui tentent de récupérer des entités à partir du jeu d'entités.          </summary>
      <returns>Entités correspondantes provenant du jeu d'entités.</returns>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Get(`1)">
      <summary>Gère les requêtes GET qui tentent de récupérer une entité par clé à partir du jeu d'entités.</summary>
      <returns>Message de réponse à renvoyer au client.</returns>
      <param name="key">Clé d'entité de l'entité à récupérer.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.GetEntityByKeyAsync(`1)">
      <summary>  Cette méthode doit être substituée pour récupérer une entité par clé à partir du jeu d'entités.</summary>
      <returns>Entité récupérée ou valeur Null si une entité avec la clé d'entité spécifiée est introuvable dans le jeu d'entités.</returns>
      <param name="key">Clé d'entité de l'entité à récupérer.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.GetKey(`0)">
      <summary>Cette méthode doit être substituée pour obtenir la clé d'entité de l'entité spécifiée.</summary>
      <returns>Valeur clé de l'entité.</returns>
      <param name="entity">L'entité.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.HandleUnmappedRequest(System.Web.Http.OData.Routing.ODataPath)">
      <summary>   Cette méthode doit être substituée pour gérer toutes les demandes OData non mappées.</summary>
      <returns>Message de réponse à renvoyer au client.</returns>
      <param name="odataPath">Chemin d'accès OData de la demande.</param>
    </member>
    <member name="P:System.Web.Http.OData.AsyncEntitySetController`2.ODataPath">
      <summary>Obtient le chemin d'accès OData de la demande actuelle.</summary>
      <returns>Retourne <see cref="T:System.Web.Http.OData.Routing.ODataPath" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Patch(`1,System.Web.Http.OData.Delta{`0})">
      <summary>Gère les requêtes PATCH et MERGE pour mettre à jour partiellement une seule entité du jeu d'entités.</summary>
      <returns>Message de réponse à renvoyer au client.</returns>
      <param name="key">Clé d'entité de l'entité à mettre à jour.</param>
      <param name="patch">Correctif représentant la mise à jour partielle.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.PatchEntityAsync(`1,System.Web.Http.OData.Delta{`0})">
      <summary>   Cette méthode doit être substituée pour appliquer une mise à jour partielle à une entité existante dans le jeu d'entités.</summary>
      <returns>Retourne <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
      <param name="key">Clé d'entité de l'entité à mettre à jour.</param>
      <param name="patch">Correctif représentant la mise à jour partielle.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Post(`0)">
      <summary>Gère les requêtes POST qui créent de nouvelles entités dans le jeu d'entités.</summary>
      <returns>Message de réponse à renvoyer au client.</returns>
      <param name="entity">Entité à insérer dans le jeu d'entités.</param>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.Put(`1,`0)">
      <summary>  Gère les requêtes PUT qui tentent de remplacer une entité spécifique dans le jeu d'entités.</summary>
      <returns>Message de réponse à renvoyer au client.</returns>
      <param name="key">Clé d'entité de l'entité à remplacer.</param>
      <param name="update">Entité mise à jour.</param>
    </member>
    <member name="P:System.Web.Http.OData.AsyncEntitySetController`2.QueryOptions">
      <summary>Obtient les options de requête OData de la demande actuelle.</summary>
      <returns>Retourne <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions`1" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.AsyncEntitySetController`2.UpdateEntityAsync(`1,`0)">
      <summary>Cette méthode doit être substituée pour mettre à jour une entité existante dans le jeu d'entités.</summary>
      <returns>Entité mise à jour.</returns>
      <param name="key">Clé d'entité de l'entité à mettre à jour.</param>
      <param name="update">Entité mise à jour.</param>
    </member>
    <member name="T:System.Web.Http.OData.ClrTypeAnnotation">
      <summary>Represents a mapping from an <see cref="T:Microsoft.Data.Edm.IEdmType" /> to a CLR type.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ClrTypeAnnotation.#ctor(System.Type)">
      <summary>Initializes a new instance of <see cref="T:System.Web.Http.OData.ClrTypeAnnotation" /> class.</summary>
      <param name="clrType">The backing CLR type for the EDM type.</param>
    </member>
    <member name="P:System.Web.Http.OData.ClrTypeAnnotation.ClrType">
      <summary>The backing CLR type for the EDM type.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Delta`1">
      <summary>Classe qui effectue le suivi des modifications (delta) pour un <paramref name="TEntityType" /> particulier.</summary>
      <typeparam name="TEntityType">TEntityType est le type de base de l'entité pour laquelle ce delta effectue le suivi des modifications.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.#ctor">
      <summary>Initialise une nouvelle instance de <see cref="T:System.Web.Http.OData.Delta`1" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de <see cref="T:System.Web.Http.OData.Delta`1" />.</summary>
      <param name="entityType">Type d'entité dérivé pour lequel un suivi des modifications serait effectué. <paramref name="entityType" /> est affectable aux instances de <paramref name="TEntityType" />.</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.Clear">
      <summary>Efface le delta et réinitialise l'entité sous-jacente.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.CopyChangedValues(`0)">
      <summary>Copie les valeurs des propriétés modifiées à partir de l'entité sous-jacente (accessible via <see cref="M:System.Web.Http.OData.Delta`1.GetEntity" /> pour l'entité <paramref name="original" />.</summary>
      <param name="original">Entité à mettre à jour.</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.CopyUnchangedValues(`0)">
      <summary>Copie les valeurs des propriétés non modifiées à partir de l'entité sous-jacente (accessible via <see cref="M:System.Web.Http.OData.Delta`1.GetEntity" /> pour l'entité <paramref name="original" />.</summary>
      <param name="original">Entité à mettre à jour.</param>
    </member>
    <member name="P:System.Web.Http.OData.Delta`1.EntityType">
      <summary>  Type réel de l'entité pour lequel un suivi des modifications est effectué.</summary>
      <returns>Retourne <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.GetChangedPropertyNames">
      <summary>Retourne les propriétés qui ont été modifiées via ce Delta en tant qu'énumération des noms de propriétés</summary>
      <returns>Retourne <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.GetEntity">
      <summary>Retourne l'instance <see cref="P:System.Web.Http.OData.Delta`1.EntityType" /> qui contient les modifications (et les valeurs d'origine) dont le suivi est effectué par ce Delta.</summary>
      <returns>Retourne <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.GetUnchangedPropertyNames">
      <summary>  Retourne les propriétés qui n'ont pas été modifiées via ce Delta en tant qu'énumération des noms de propriétés</summary>
      <returns>Retourne <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.Patch(`0)">
      <summary>Remplace l'entité <paramref name="original" /> avec les modifications dont le suivi a été effectué par ce Delta. </summary>
      <param name="original">Entité à mettre à jour.</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.Put(`0)">
      <summary>Remplace l'entité <paramref name="original" /> avec les valeurs stockées dans ce Delta.</summary>
      <param name="original">Entité à mettre à jour.</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
      <summary>Substitue la méthode DynamicObject TryGetMember, ce qui fait que seules les propriétés de <see cref="P:System.Web.Http.OData.Delta`1.EntityType" /> peuvent être obtenues.</summary>
      <returns>Retourne <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.TryGetPropertyType(System.String,System.Type@)">
      <summary>Tente d'obtenir le <see cref="T:System.Type" /> de la propriété appelée <paramref name="name" /> à partir de l'entité sous-jacente.</summary>
      <returns>true si la propriété a été trouvée ; sinon, false.</returns>
      <param name="name">Nom de la propriété.</param>
      <param name="type">Type de la propriété.</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.TryGetPropertyValue(System.String,System.Object@)">
      <summary>Tente d'obtenir la valeur de la propriété appelée <paramref name="name" /> à partir de l'entité sous-jacente.</summary>
      <returns>true si la propriété a été trouvée.</returns>
      <param name="name">Nom de la propriété.</param>
      <param name="value">Valeur de la propriété.</param>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
      <summary>Substitue la méthode DynamicObject TrySetMember, ce qui fait que seules les propriétés de <see cref="P:System.Web.Http.OData.Delta`1.EntityType" /> peuvent être définies.</summary>
      <returns>Retourne <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Delta`1.TrySetPropertyValue(System.String,System.Object)">
      <summary>  Tente d'attribuer à la propriété appelée <paramref name="name" /> la <paramref name="value" /> spécifiée.</summary>
      <returns>true en cas de succès ; sinon, false.</returns>
      <param name="name">Nom de la propriété.</param>
      <param name="value">Nouvelle valeur de la propriété.</param>
    </member>
    <member name="T:System.Web.Http.OData.EntityInstanceContext">
      <summary>Une instance de <see cref="T:System.Web.Http.OData.EntityInstanceContext`1" /> est passée aux générateurs des éléments self link ( <see cref="M:EntitySetConfiguration.HasIdLink" /> , <see cref="M:EntitySetConfiguration.HasEditLink" /> , <see cref="M:EntitySetConfiguration.HasReadLink" /> ) et lien de navigation ( <see cref="M:EntitySetConfiguration.HasNavigationPropertyLink" /> , <see cref="M:EntitySetConfiguration.HasNavigationPropertiesLink" /> ) et peut être utilisée par les générateurs de liens pour générer des liens.</summary>
    </member>
    <member name="M:System.Web.Http.OData.EntityInstanceContext.#ctor"></member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.EdmModel">
      <summary>Obtient la <see cref="T:Microsoft.Data.Edm.IEdmModel" />.</summary>
      <returns>Retourne <see cref="T:Microsoft.Data.Edm.IEdmModel" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.EntityInstance">
      <summary>Obtient la valeur de cette instance d'entité.</summary>
      <returns>Retourne <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.EntitySet">
      <summary>Obtient le <see cref="T:Microsoft.Data.Edm.IEdmEntitySet" /> auquel cette instance appartient.</summary>
      <returns>Retourne <see cref="T:Microsoft.Data.Edm.IEdmEntitySet" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.EntityType">
      <summary>Obtient le <see cref="T:Microsoft.Data.Edm.IEdmEntityType" /> de cette instance d'entité.</summary>
      <returns>Retourne <see cref="T:Microsoft.Data.Edm.IEdmEntityType" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.Request">
      <returns>Retourne <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.SkipExpensiveAvailabilityChecks">
      <summary>Détermine si l'opération ActionAvailabilityChecks doit être effectuée ou non. Ceci permet d'indiquer au formateur s'il faut vérifier la disponibilité d'une action avant d'inclure un lien vers elle. Dans le cas d'un flux, ce contrôlé est ignoré.</summary>
      <returns>Retourne <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext.Url">
      <returns>Retourne <see cref="T:System.Web.Http.Routing.UrlHelper" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.EntityInstanceContext`1">
      <summary>Une instance de <see cref="T:System.Web.Http.OData.EntityInstanceContext`1" /> est passée aux générateurs des éléments self link ( <see cref="M:EntitySetConfiguration.HasIdLink" /> , <see cref="M:EntitySetConfiguration.HasEditLink" /> , <see cref="M:EntitySetConfiguration.HasReadLink" /> ) et lien de navigation ( <see cref="M:EntitySetConfiguration.HasNavigationPropertyLink" /> , <see cref="M:EntitySetConfiguration.HasNavigationPropertiesLink" /> ) et peut être utilisée par les générateurs de liens pour générer des liens.</summary>
      <typeparam name="TEntityType">Type d'entité</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.EntityInstanceContext`1.#ctor"></member>
    <member name="P:System.Web.Http.OData.EntityInstanceContext`1.EntityInstance"></member>
    <member name="T:System.Web.Http.OData.EntitySetController`2">
      <summary>Fournit un point de départ pratique pour un contrôleur qui expose un jeu d'entités OData. C'est la version synchrone de <see cref="T:System.Web.Http.OData.AsyncEntitySetController`2" />.</summary>
      <typeparam name="TEntity">Type associé au type d'entité du jeu d'entités exposé.</typeparam>
      <typeparam name="TKey">Type associé à la clé d'entité du type d'entité du jeu d'entités exposé.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.#ctor"></member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.CreateEntity(`0)">
      <summary>  Cette méthode doit être substituée pour créer une entité dans le jeu d'entités.</summary>
      <returns>Entité créée.</returns>
      <param name="entity">Entité à ajouter au jeu d'entités.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.CreateLink(`1,System.String,System.Uri)">
      <summary>Cette méthode doit être substituée pour gérer les requêtes POST et PUT qui tentent de créer un lien entre deux entités.</summary>
      <param name="key">Clé de l'entité avec la propriété de navigation.</param>
      <param name="navigationProperty">Nom de la propriété de navigation.</param>
      <param name="link">URI de l'entité du lien.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.Delete(`1)">
      <summary>   Cette méthode doit être substituée pour gérer les requêtes DELETE afin de supprimer des entités existantes du jeu d'entités.</summary>
      <param name="key">Clé d'entité de l'entité à supprimer.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.DeleteLink(`1,System.String,System.String)">
      <summary>Cette méthode doit être substituée pour gérer les requêtes DELETE qui tentent de défaire une relation entre deux entités.</summary>
      <param name="key">Clé de l'entité avec la propriété de navigation.</param>
      <param name="relatedKey">Clé de l'entité associée.</param>
      <param name="navigationProperty">Nom de la propriété de navigation.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.DeleteLink(`1,System.String,System.Uri)">
      <summary>  Cette méthode doit être substituée pour gérer les requêtes DELETE qui tentent de défaire une relation entre deux entités.</summary>
      <param name="key">Clé de l'entité avec la propriété de navigation.</param>
      <param name="navigationProperty">Nom de la propriété de navigation.</param>
      <param name="link">URI de l'entité à supprimer de la propriété de navigation.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.Get">
      <summary>Cette méthode doit être substituée pour gérer les requêtes GET qui tentent de récupérer des entités à partir du jeu d'entités.</summary>
      <returns>Entités correspondantes provenant du jeu d'entités.</returns>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.Get(`1)">
      <summary>Gère les requêtes GET qui tentent de récupérer une entité par clé à partir du jeu d'entités.</summary>
      <returns>Message de réponse à renvoyer au client.</returns>
      <param name="key">Clé d'entité de l'entité à récupérer.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.GetEntityByKey(`1)">
      <summary>Cette méthode doit être substituée pour récupérer une entité par clé à partir du jeu d'entités.</summary>
      <returns>Entité récupérée ou valeur Null si une entité avec la clé d'entité spécifiée est introuvable dans le jeu d'entités.</returns>
      <param name="key">Clé d'entité de l'entité à récupérer.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.GetKey(`0)">
      <summary>Cette méthode doit être substituée pour obtenir la clé d'entité de l'entité spécifiée.</summary>
      <returns>Valeur clé de l'entité.</returns>
      <param name="entity">L'entité.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.HandleUnmappedRequest(System.Web.Http.OData.Routing.ODataPath)">
      <summary>Cette méthode doit être substituée pour gérer toutes les demandes OData non mappées.</summary>
      <returns>Message de réponse à renvoyer au client.</returns>
      <param name="odataPath">Chemin d'accès OData de la demande.</param>
    </member>
    <member name="P:System.Web.Http.OData.EntitySetController`2.ODataPath">
      <summary>Obtient le chemin d'accès OData de la demande actuelle.</summary>
      <returns>Retourne <see cref="T:System.Web.Http.OData.Routing.ODataPath" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.Patch(`1,System.Web.Http.OData.Delta{`0})">
      <summary>   Gère les requêtes PATCH et MERGE pour mettre à jour partiellement une seule entité du jeu d'entités.</summary>
      <returns>Message de réponse à renvoyer au client.</returns>
      <param name="key">Clé d'entité de l'entité à mettre à jour.</param>
      <param name="patch">Correctif représentant la mise à jour partielle.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.PatchEntity(`1,System.Web.Http.OData.Delta{`0})">
      <summary>   Cette méthode doit être substituée pour appliquer une mise à jour partielle à une entité existante dans le jeu d'entités.</summary>
      <returns>Entité mise à jour.</returns>
      <param name="key">Clé d'entité de l'entité à mettre à jour.</param>
      <param name="patch">Correctif représentant la mise à jour partielle.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.Post(`0)">
      <summary>Gère les requêtes POST qui créent de nouvelles entités dans le jeu d'entités.</summary>
      <returns>Message de réponse à renvoyer au client.</returns>
      <param name="entity">Entité à insérer dans le jeu d'entités.</param>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.Put(`1,`0)">
      <summary>Gère les requêtes PUT qui tentent de remplacer une entité spécifique dans le jeu d'entités.</summary>
      <returns>Message de réponse à renvoyer au client.</returns>
      <param name="key">Clé d'entité de l'entité à remplacer.</param>
      <param name="update">Entité mise à jour.</param>
    </member>
    <member name="P:System.Web.Http.OData.EntitySetController`2.QueryOptions">
      <summary>  Obtient les options de requête OData de la demande actuelle.</summary>
      <returns>Retourne <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions`1" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.EntitySetController`2.UpdateEntity(`1,`0)">
      <summary>   Cette méthode doit être substituée pour mettre à jour une entité existante dans le jeu d'entités.</summary>
      <returns>Entité mise à jour.</returns>
      <param name="key">Clé d'entité de l'entité à mettre à jour.</param>
      <param name="update">Entité mise à jour.</param>
    </member>
    <member name="T:System.Web.Http.OData.FeedContext">
      <summary>Contient des informations de contexte sur le flux en cours de sérialisation.</summary>
    </member>
    <member name="M:System.Web.Http.OData.FeedContext.#ctor"></member>
    <member name="P:System.Web.Http.OData.FeedContext.EntitySet">
      <summary>Obtient le <see cref="T:Microsoft.Data.Edm.IEdmEntitySet" /> auquel cette instance appartient.</summary>
    </member>
    <member name="P:System.Web.Http.OData.FeedContext.FeedInstance">
      <summary>Obtient la valeur de cette instance de flux.</summary>
    </member>
    <member name="P:System.Web.Http.OData.FeedContext.Request"></member>
    <member name="P:System.Web.Http.OData.FeedContext.Url"></member>
    <member name="T:System.Web.Http.OData.FromODataUriAttribute">
      <summary>Implémentation de l'instance <see cref="T:System.Web.Http.ParameterBindingAttribute" /> pouvant lier des paramètres URI via les conventions OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.FromODataUriAttribute.#ctor"></member>
    <member name="M:System.Web.Http.OData.FromODataUriAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Obtient la liaison pour un paramètre.</summary>
      <returns>
        <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" /> qui contient la liaison.</returns>
      <param name="parameter">Paramètre à lier.</param>
    </member>
    <member name="T:System.Web.Http.OData.IDelta">
      <summary>Autorise les modifications et assure le suivi des modifications apportées à un objet.</summary>
    </member>
    <member name="M:System.Web.Http.OData.IDelta.Clear">
      <summary>Efface <see cref="T:System.Web.Http.OData.IDelta" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.IDelta.GetChangedPropertyNames">
      <summary>Retourne les propriétés qui ont été modifiées via cet IDelta en tant qu'énumérable de noms de propriétés</summary>
      <returns>Retourne <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.IDelta.GetUnchangedPropertyNames">
      <summary>Retourne les propriétés qui n'ont pas été modifiées via cet IDelta en tant qu'énumérable de noms de propriétés</summary>
      <returns>Retourne <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.IDelta.TryGetPropertyType(System.String,System.Type@)">
      <summary>Tente d'obtenir le <see cref="T:System.Type" /> de la propriété appelée <paramref name="name" /> de l'entité sous-jacente.</summary>
      <returns>Retourne true si la propriété est trouvée et false si elle est introuvable.</returns>
      <param name="name">Nom de la propriété</param>
      <param name="type">Type de la propriété</param>
    </member>
    <member name="M:System.Web.Http.OData.IDelta.TryGetPropertyValue(System.String,System.Object@)">
      <summary>Tente d'obtenir la valeur de la propriété appelée <paramref name="name" /> de l'entité sous-jacente.</summary>
      <returns>Retourne true si la propriété est trouvée et false si elle est introuvable.</returns>
      <param name="name">Nom de la propriété</param>
      <param name="value">Valeur de la propriété</param>
    </member>
    <member name="M:System.Web.Http.OData.IDelta.TrySetPropertyValue(System.String,System.Object)">
      <summary>Tente d'attribuer à la propriété appelée <paramref name="name" /> la <paramref name="value" /> spécifiée.</summary>
      <returns>Retourne true en cas de succès, et false dans le cas contraire.</returns>
      <param name="name">Nom de la propriété</param>
      <param name="value">Nouvelle valeur de la propriété</param>
    </member>
    <member name="T:System.Web.Http.OData.ODataActionParameters">
      <summary>ActionPayload contient les noms de paramètres et les valeurs fournis par un client dans une requête POST pour invoquer une action particulière. Les valeurs des paramètres sont stockées dans le dictionnaire indexé via le nom du paramètre.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataActionParameters.#ctor"></member>
    <member name="T:System.Web.Http.OData.ODataController">
      <summary>Définit une classe de base pour les contrôleurs OData qui prennent en charge l'écriture et la lecture des données via les formats OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataController.#ctor"></member>
    <member name="T:System.Web.Http.OData.ODataFormattingAttribute">
      <summary>     Attribut à placer sur des contrôleurs pour activer les formateurs OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataFormattingAttribute.#ctor"></member>
    <member name="M:System.Web.Http.OData.ODataFormattingAttribute.Initialize(System.Web.Http.Controllers.HttpControllerSettings,System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary>Rappel appelé pour définir les substitutions par contrôleur pour ce controllerDescriptor.</summary>
      <param name="controllerSettings">Paramètres de contrôleur à initialiser.</param>
      <param name="controllerDescriptor">Descripteur du contrôleur. Remarque : le <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> peut être associé au type de contrôleur dérivé étant donné que <see cref="T:System.Web.Http.Controllers.IControllerConfiguration" /> est hérité.</param>
    </member>
    <member name="T:System.Web.Http.OData.ODataMetadataController">
      <summary>Represents an <see cref="T:System.Web.Http.ApiController" /> for generating OData servicedoc and metadata document ($metadata).</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataMetadataController.#ctor"></member>
    <member name="M:System.Web.Http.OData.ODataMetadataController.GetMetadata">
      <summary>Generates the OData $metadata document.</summary>
      <returns>The <see cref="T:Microsoft.Data.Edm.IEdmModel" /> representing $metadata.</returns>
    </member>
    <member name="M:System.Web.Http.OData.ODataMetadataController.GetServiceDocument">
      <summary>Generates the OData service document.</summary>
      <returns>The service document for the service.</returns>
    </member>
    <member name="T:System.Web.Http.OData.ODataQueryContext">
      <summary>Ceci définit quelques informations de contexte utilisées pour exécuter une composition de requête.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataQueryContext.#ctor(Microsoft.Data.Edm.IEdmModel,System.Type)">
      <summary>  Construit une instance de <see cref="T:System.Web.Http.OData.ODataQueryContext" /> avec <see cref="T:Microsoft.Data.Edm.IEdmModel" /> et le type CLR de l'élément.</summary>
      <param name="model">EdmModel qui comprend le <see cref="T:Microsoft.Data.Edm.IEdmType" /> correspondant au <paramref name="elementClrType" /> donné.</param>
      <param name="elementClrType">Type CLR de l'élément de la collection faisant l'objet de la requête.</param>
    </member>
    <member name="P:System.Web.Http.OData.ODataQueryContext.ElementClrType">
      <summary>Obtient le type CLR de l'élément.</summary>
      <returns>Retourne <see cref="T:System.Type" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.ODataQueryContext.ElementType">
      <summary>   Obtient l'instance <see cref="T:Microsoft.Data.Edm.IEdmType" /> de l'élément.</summary>
      <returns>Retourne <see cref="T:Microsoft.Data.Edm.IEdmType" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.ODataQueryContext.Model">
      <summary>Obtient le <see cref="T:Microsoft.Data.Edm.IEdmModel" /> donné contenant EntitySet.</summary>
      <returns>Retourne <see cref="T:Microsoft.Data.Edm.IEdmModel" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.ODataQueryParameterBindingAttribute">
      <summary>A <see cref="T:System.Web.Http.ParameterBindingAttribute" /> to bind parameters of type <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions" /> to the OData query from the incoming request.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataQueryParameterBindingAttribute.#ctor"></member>
    <member name="M:System.Web.Http.OData.ODataQueryParameterBindingAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)"></member>
    <member name="T:System.Web.Http.OData.ODataRoutingAttribute">
      <summary>Définit un attribut de niveau contrôleur pouvant être utilisé pour activer une sélection d'actions OData basée sur les conventions d'itinéraire.</summary>
    </member>
    <member name="M:System.Web.Http.OData.ODataRoutingAttribute.#ctor"></member>
    <member name="M:System.Web.Http.OData.ODataRoutingAttribute.Initialize(System.Web.Http.Controllers.HttpControllerSettings,System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary>  Rappel appelé pour définir les substitutions par contrôleur pour ce controllerDescriptor.</summary>
      <param name="controllerSettings">Paramètres de contrôleur à initialiser.</param>
      <param name="controllerDescriptor">Descripteur du contrôleur. Remarque : le <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> peut être associé au type de contrôleur dérivé étant donné que <see cref="T:System.Web.Http.Controllers.IControllerConfiguration" /> est hérité.</param>
    </member>
    <member name="T:System.Web.Http.OData.PageResult">
      <summary>Represents a feed of entities that includes additional information that OData formats support.</summary>
    </member>
    <member name="M:System.Web.Http.OData.PageResult.#ctor(System.Uri,System.Nullable{System.Int64})">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.PageResult" /> class.</summary>
      <param name="nextPageLink">The link for the next page of items in the feed.</param>
      <param name="count">The total count of items in the feed.</param>
    </member>
    <member name="P:System.Web.Http.OData.PageResult.Count">
      <summary>Gets the total count of items in the feed.</summary>
      <returns>Returns <see cref="T:System.Int64" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.PageResult.NextPageLink">
      <summary>Gets the link for the next page of items in the feed.</summary>
      <returns>Returns <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.PageResult`1">
      <summary>PageResult est un flux d'entités qui comprend des informations supplémentaires que les formats OData prennent en charge. la limite actuelle est comme suit : Le décompte de toutes les entités correspondantes sur le serveur (demandées via $inlinecount=allpages) ; le NextLink pour récupérer la page suivante des résultats (ajouté si le serveur applique la fonction SDP ou Server Driven Paging).</summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.PageResult`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Uri,System.Nullable{System.Int64})">
      <summary>Crée un jeu partiel de résultats - utilisé quand la fonction de pagination serveur SDP est activée.</summary>
      <param name="items">Sous-jeu des résultats correspondants qui doit être sérialisé dans cette page.</param>
      <param name="nextPageLink">Lien vers la page suivante des résultats correspondants (s'il en existe d'autres)</param>
      <param name="count">Nombre total de résultats correspondants de façon que les clients découvrent le nombre de correspondances sur le serveur.</param>
    </member>
    <member name="M:System.Web.Http.OData.PageResult`1.GetEnumerator">
      <returns>Retourne <see cref="T:System.Collections.Generic.IEnumerator`1" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.PageResult`1.Items">
      <returns>Retourne <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.PageResult`1.System#Collections#IEnumerable#GetEnumerator">
      <returns>Retourne <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ActionConfiguration">
      <summary> ActionConfiguration représente une action OData que vous souhaitez exposer via votre service.   ActionConfigurations sont exposés via $metadata en tant qu'élément &lt;FunctionImport /&gt;.   </summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.AddParameter(System.String,System.Web.Http.OData.Builder.IEdmTypeConfiguration)">
      <summary> Ajoute un nouveau paramètre de non-liaison. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ActionConfiguration.BindingParameter">
      <summary> Obtenir bindingParameter.   Null signifie que l'action n'a pas de bindingParameter.  </summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.CollectionParameter``1(System.String)">
      <summary> Ajoute un nouveau paramètre de collection de non-liaison. </summary>
      <typeparam name="TElementType"></typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ActionConfiguration.FollowsConventions"></member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.GetActionLink">
      <summary> Récupère la fabrique de liens d'action actuellement inscrite. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.HasActionLink(System.Func{System.Web.Http.OData.EntityInstanceContext,System.Uri},System.Boolean)"></member>
    <member name="P:System.Web.Http.OData.Builder.ActionConfiguration.IsAlwaysBindable">
      <summary> Indique si cette action peut toujours être liée. Par exemple, imaginons une action Watch qui peut être liée à Movie : il se peut qu'il ne soit pas toujours possible de regarder un film, auquel cas IsAlwaysBindable retournerait la valeur False. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ActionConfiguration.IsBindable"></member>
    <member name="P:System.Web.Http.OData.Builder.ActionConfiguration.Kind"></member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.Parameter``1(System.String)">
      <summary> Ajoute un nouveau paramètre de non-liaison. </summary>
      <typeparam name="TParameter"></typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ActionConfiguration.Parameters"></member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.Returns``1">
      <summary> Établit le type de retour de l'action.  Utilisé quand le type de retour est une Primitive simple ou ComplexType.  </summary>
      <typeparam name="TReturnType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.ReturnsCollection``1">
      <summary> Établit le type de retour de l'action  Utilisé quand le type de retour est une collection de Primitives ou de ComplexTypes.  </summary>
      <typeparam name="TReturnElementType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.ReturnsCollectionFromEntitySet``1(System.String)">
      <summary> Définit le type de retour à une collection d'instances EntityType. </summary>
      <param name="entitySetName">entitySetName contenant les instances EntityType retournées</param>
      <typeparam name="TElementEntityType">Type qui est un EntityType</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.ReturnsFromEntitySet``1(System.String)">
      <summary> Définit le type de retour à une instance EntityType unique. </summary>
      <param name="entitySetName">entitySetName contenant l'instance EntityType de retour</param>
      <typeparam name="TEntityType">Type qui est un EntityType</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionConfiguration.SetBindingParameter(System.String,System.Web.Http.OData.Builder.IEdmTypeConfiguration,System.Boolean)">
      <summary> Spécifie le nom bindingParameter, le type et indique s'il est alwaysBindable, à utiliser uniquement si l'action est de type « isBindable ». </summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ActionLinkBuilder">
      <summary> ActionLinkBuilder peut être utilisé pour annoter une action.  C'est ainsi que les formateurs créent des liens pour invoquer des actions liées. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ActionLinkBuilder.#ctor(System.Func{System.Web.Http.OData.EntityInstanceContext,System.Uri},System.Boolean)"></member>
    <member name="M:System.Web.Http.OData.Builder.ActionLinkBuilder.BuildActionLink(System.Web.Http.OData.EntityInstanceContext)"></member>
    <member name="M:System.Web.Http.OData.Builder.ActionLinkBuilder.CreateActionLinkFactory(System.Func{System.Web.Http.OData.EntityInstanceContext,System.Uri},System.Func{System.Web.Http.OData.EntityInstanceContext,System.Boolean})">
      <summary> Crée une fabrique de liens d'action qui génère un lien d'action, mais seulement quand c'est approprié sur la base de l'élément expensiveAvailabilityCheck, et indique si de coûteuses vérifications doivent être effectuées, ce qui est déduit en examinant la propriété EntityInstanceContext.SkipExpensiveActionAvailabilityChecks. </summary>
      <returns>Nouvelle fabrique de liens d'action.</returns>
      <param name="baseFactory">Fabrique de liens d'action qui génère réellement les liens si tous les contrôles réussissent.</param>
      <param name="expensiveAvailabilityCheck">Fonction de contrôle de disponibilité qui est coûteuse mais qui, lorsqu'elle est appelée, retourne si l'action est disponible.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ActionLinkBuilder.FollowsConventions"></member>
    <member name="T:System.Web.Http.OData.Builder.BindingParameterConfiguration">
      <summary> Représente une BindingParameter.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.BindingParameterConfiguration.#ctor(System.String,System.Web.Http.OData.Builder.IEdmTypeConfiguration,System.Boolean)">
      <summary> Créer un BindingParameterConfiguration </summary>
      <param name="name">Nom du paramètre de liaison</param>
      <param name="parameterType">Type du paramètre de liaison</param>
      <param name="alwaysBindable">Indique si l'action peut toujours être liée à des instances du paramètre de liaison.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.BindingParameterConfiguration.AlwaysBindable">
      <summary> Indique si le BindingParameter peut toujours être lié ou non. Par exemple, certaines actions sont toujours disponibles, alors que d'autres ne sont disponibles qu'à certains moments ou dans certains états. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Builder.BindingParameterConfiguration.DefaultBindingParameterName"></member>
    <member name="T:System.Web.Http.OData.Builder.CollectionPropertyConfiguration">
      <summary>CollectionPropertyConfiguration représente un CollectionProperty sur un EntityType ou un ComplexType.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.CollectionPropertyConfiguration.#ctor(System.Reflection.PropertyInfo,System.Web.Http.OData.Builder.StructuralTypeConfiguration)">
      <summary>Construit un CollectionPropertyConfiguration à l'aide de l'élément <paramref name="property" /> fourni.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionPropertyConfiguration.ElementType">
      <summary>Retourne le type des éléments de la collection.</summary>
      <returns>Retourne <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.CollectionPropertyConfiguration.IsOptional">
      <summary>Définit CollectionProperty comme étant optionnel (acceptant la valeur Null).</summary>
      <returns>Retourne <see cref="T:System.Web.Http.OData.Builder.CollectionPropertyConfiguration" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.CollectionPropertyConfiguration.IsRequired">
      <summary>Définit CollectionProperty comme étant obligatoire (n'acceptant pas la valeur Null).</summary>
      <returns>Retourne <see cref="T:System.Web.Http.OData.Builder.CollectionPropertyConfiguration" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionPropertyConfiguration.Kind">
      <returns>Retourne <see cref="T:System.Web.Http.OData.Builder.PropertyKind" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionPropertyConfiguration.RelatedClrType">
      <returns>Retourne <see cref="T:System.Type" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.CollectionTypeConfiguration">
      <summary>Représente une collection d'un type nommé, par exemple Collection(Namespace.Customer) ou Collection(Namespace.Address).</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.CollectionTypeConfiguration.#ctor(System.Web.Http.OData.Builder.IEdmTypeConfiguration,System.Type)">
      <summary>Construit une collection contenant des éléments de l'ElementType spécifié et qui est représentée dans .NET à l'aide du clrType spécifié</summary>
      <param name="elementType">EdmTypeConfiguration des éléments de la collection</param>
      <param name="clrType">Type de cette collection qui se manifeste dans .NET</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.ClrType">
      <returns>Retourne <see cref="T:System.Type" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.ElementType">
      <summary>EdmTypeConfiguration des éléments de cette collection</summary>
      <returns>Retourne <see cref="T:System.Web.Http.OData.Builder.IEdmTypeConfiguration" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.FullName">
      <returns>Retourne <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.Kind">
      <returns>Retourne <see cref="T:Microsoft.Data.Edm.EdmTypeKind" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.ModelBuilder">
      <returns>Retourne <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.Name">
      <returns>Retourne <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.CollectionTypeConfiguration.Namespace">
      <returns>Retourne <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ComplexPropertyConfiguration"></member>
    <member name="M:System.Web.Http.OData.Builder.ComplexPropertyConfiguration.#ctor(System.Reflection.PropertyInfo,System.Web.Http.OData.Builder.StructuralTypeConfiguration)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Http.OData.Builder.ComplexPropertyConfiguration" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ComplexPropertyConfiguration.IsOptional"></member>
    <member name="M:System.Web.Http.OData.Builder.ComplexPropertyConfiguration.IsRequired"></member>
    <member name="P:System.Web.Http.OData.Builder.ComplexPropertyConfiguration.Kind"></member>
    <member name="P:System.Web.Http.OData.Builder.ComplexPropertyConfiguration.RelatedClrType"></member>
    <member name="T:System.Web.Http.OData.Builder.ComplexTypeConfiguration">
      <summary>Permet d'effectuer la configuration d'un type complexe dans un modèle. Un ComplexTypeConfiguration peut être obtenu à l'aide de la méthode <see cref="M:System.Web.Http.OData.Builder.ODataModelBuilder.ComplexType``1" /> .</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ComplexTypeConfiguration.#ctor"></member>
    <member name="M:System.Web.Http.OData.Builder.ComplexTypeConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,System.Type)"></member>
    <member name="P:System.Web.Http.OData.Builder.ComplexTypeConfiguration.Kind"></member>
    <member name="T:System.Web.Http.OData.Builder.ComplexTypeConfiguration`1">
      <summary>Represents an <see cref="T:Microsoft.Data.Edm.IEdmComplexType" /> that can be built using <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</summary>
      <typeparam name="TComplexType"></typeparam>
    </member>
    <member name="T:System.Web.Http.OData.Builder.EntityCollectionConfiguration`1">
      <summary>EntityCollectionConfiguration représente une collection d'entités. Cette classe permet de configurer les éléments qui sont liés aux entités, comme les actions sont liées à une collection.</summary>
      <typeparam name="TEntityType">EntityType correspondant à ElementType de EntityCollection</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityCollectionConfiguration`1.Action(System.String)">
      <summary>Crée une nouvelle action qui lie à Collection(EntityType).</summary>
      <returns>ActionConfiguration permettant une configuration supplémentaire de l'action.</returns>
      <param name="name">Nom de l'action.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityCollectionConfiguration`1.TransientAction(System.String)">
      <summary>Crée une nouvelle action qui lie parfois à Collection(EntityType).</summary>
      <returns>ActionConfiguration permettant une configuration supplémentaire de l'action.</returns>
      <param name="name">Nom de l'action.</param>
    </member>
    <member name="T:System.Web.Http.OData.Builder.EntitySetConfiguration">
      <summary>Permet d'effectuer la configuration pour un jeu d'entités dans un modèle. Une instance <see cref="T:System.Web.Http.OData.Builder.EntitySetConfiguration" /> peut être obtenue à l'aide de la méthode <see cref="M:System.Web.Http.OData.Builder.ODataModelBuilder.EntitySet``1(System.String)" /> .</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.#ctor"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,System.Type,System.String)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,System.Web.Http.OData.Builder.EntityTypeConfiguration,System.String)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.AddBinding(System.Web.Http.OData.Builder.NavigationPropertyConfiguration,System.Web.Http.OData.Builder.EntitySetConfiguration)">
      <summary>Lie la propriété de navigation donnée au jeu d'entités cible.</summary>
      <returns>
        <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyBinding" /> pour une configuration supplémentaire.</returns>
      <param name="navigationConfiguration">Propriété de navigation.</param>
      <param name="targetEntitySet">Jeu d'entités cible.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntitySetConfiguration.Bindings">
      <summary>Obtient les cibles de navigation de ce jeu d'entités.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntitySetConfiguration.ClrType">
      <summary>Obtient le type clr de sauvegarde pour le type d'entité contenu dans ce jeu d'entités.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntitySetConfiguration.EntityType">
      <summary>Obtient le type d'entité contenu dans ce jeu d'entités.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.FindBinding(System.String)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.FindBinding(System.Web.Http.OData.Builder.NavigationPropertyConfiguration)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.FindBinding(System.Web.Http.OData.Builder.NavigationPropertyConfiguration,System.Boolean)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.GetEditLink">
      <summary>Obtient le générateur utilisé pour générer des liens d'édition pour les entrées de ce jeu d'entités.</summary>
      <returns>Générateur de liens.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.GetFeedSelfLink">
      <summary>Obtient le générateur utilisé pour générer des éléments self links pour les flux de ce jeu d'entités.</summary>
      <returns>Générateur de liens.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.GetIdLink">
      <summary>Obtient le générateur utilisé pour générer des ID pour les entrées de ce jeu d'entités.</summary>
      <returns>Générateur.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.GetNavigationPropertyLink(System.Web.Http.OData.Builder.NavigationPropertyConfiguration)">
      <summary>Obtient le générateur utilisé pour générer un lien de navigation pour la propriété de navigation donnée pour les entrées de ce jeu d'entités.</summary>
      <returns>Générateur de liens.</returns>
      <param name="navigationProperty">Propriété de navigation.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.GetReadLink">
      <summary>Obtient le générateur utilisé pour générer des liens de lecture pour les entrées de ce jeu d'entités.</summary>
      <returns>Générateur de liens.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.GetUrl"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasEditLink(System.Web.Http.OData.Builder.SelfLinkBuilder{System.Uri})"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasFeedSelfLink(System.Func{System.Web.Http.OData.FeedContext,System.Uri})">
      <summary>Ajoute un élément self link au flux.</summary>
      <returns>Configuration du jeu d'entités en cours de configuration.</returns>
      <param name="feedSelfLinkFactory">Générateur utilisé pour générer l'URL du lien.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasIdLink(System.Web.Http.OData.Builder.SelfLinkBuilder{System.String})"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasNavigationPropertiesLink(System.Collections.Generic.IEnumerable{System.Web.Http.OData.Builder.NavigationPropertyConfiguration},System.Web.Http.OData.Builder.NavigationLinkBuilder)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasNavigationPropertyLink(System.Web.Http.OData.Builder.NavigationPropertyConfiguration,System.Web.Http.OData.Builder.NavigationLinkBuilder)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasReadLink(System.Web.Http.OData.Builder.SelfLinkBuilder{System.Uri})"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.HasUrl(System.String)">
      <summary>Configure l'URL du jeu d'entités.</summary>
      <returns>Se retourne de façon que plusieurs appels puissent être chaînés.</returns>
      <param name="url">URL du jeu d'entités.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntitySetConfiguration.Name">
      <summary>Obtient le nom de ce jeu d'entités.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration.RemoveBinding(System.Web.Http.OData.Builder.NavigationPropertyConfiguration)">
      <summary>Supprime la liaison pour la propriété de navigation donnée.</summary>
      <param name="navigationConfiguration">Propriété de navigation</param>
    </member>
    <member name="T:System.Web.Http.OData.Builder.EntitySetConfiguration`1">
      <typeparam name="TEntityType"></typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntitySetConfiguration`1.EntityType"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.FindBinding(System.String)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.FindBinding(System.Web.Http.OData.Builder.NavigationPropertyConfiguration)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.FindBinding(System.Web.Http.OData.Builder.NavigationPropertyConfiguration,System.Boolean)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasEditLink(System.Func{System.Web.Http.OData.EntityInstanceContext{`0},System.String},System.Boolean)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasEditLink(System.Func{System.Web.Http.OData.EntityInstanceContext{`0},System.Uri},System.Boolean)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasFeedSelfLink(System.Func{System.Web.Http.OData.FeedContext,System.String})">
      <summary> Ajoute un élément self link au flux. </summary>
      <param name="feedSelfLinkFactory">Générateur utilisé pour générer l'URL du lien.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasFeedSelfLink(System.Func{System.Web.Http.OData.FeedContext,System.Uri})">
      <summary> Ajoute un élément self link au flux. </summary>
      <param name="feedSelfLinkFactory">Générateur utilisé pour générer l'URL du lien.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasIdLink(System.Func{System.Web.Http.OData.EntityInstanceContext{`0},System.String},System.Boolean)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasManyBinding``2(System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0}}},System.String)">
      <typeparam name="TTargetType"></typeparam>
      <typeparam name="TDerivedEntityType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasManyBinding``2(System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0}}},System.Web.Http.OData.Builder.EntitySetConfiguration{``0})">
      <typeparam name="TTargetType"></typeparam>
      <typeparam name="TDerivedEntityType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasManyBinding``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.String)">
      <typeparam name="TTargetType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasManyBinding``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Web.Http.OData.Builder.EntitySetConfiguration{``0})">
      <typeparam name="TTargetType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasNavigationPropertiesLink(System.Collections.Generic.IEnumerable{System.Web.Http.OData.Builder.NavigationPropertyConfiguration},System.Func{System.Web.Http.OData.EntityInstanceContext{`0},Microsoft.Data.Edm.IEdmNavigationProperty,System.Uri},System.Boolean)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasNavigationPropertyLink(System.Web.Http.OData.Builder.NavigationPropertyConfiguration,System.Func{System.Web.Http.OData.EntityInstanceContext{`0},Microsoft.Data.Edm.IEdmNavigationProperty,System.Uri},System.Boolean)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasOptionalBinding``2(System.Linq.Expressions.Expression{System.Func{``1,``0}},System.String)">
      <typeparam name="TTargetType"></typeparam>
      <typeparam name="TDerivedEntityType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasOptionalBinding``2(System.Linq.Expressions.Expression{System.Func{``1,``0}},System.Web.Http.OData.Builder.EntitySetConfiguration{``0})">
      <typeparam name="TTargetType"></typeparam>
      <typeparam name="TDerivedEntityType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasOptionalBinding``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
      <typeparam name="TTargetType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasOptionalBinding``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Web.Http.OData.Builder.EntitySetConfiguration{``0})">
      <typeparam name="TTargetType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasReadLink(System.Func{System.Web.Http.OData.EntityInstanceContext{`0},System.String},System.Boolean)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasReadLink(System.Func{System.Web.Http.OData.EntityInstanceContext{`0},System.Uri},System.Boolean)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasRequiredBinding``2(System.Linq.Expressions.Expression{System.Func{``1,``0}},System.String)">
      <typeparam name="TTargetType"></typeparam>
      <typeparam name="TDerivedEntityType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasRequiredBinding``2(System.Linq.Expressions.Expression{System.Func{``1,``0}},System.Web.Http.OData.Builder.EntitySetConfiguration{``0})">
      <typeparam name="TTargetType"></typeparam>
      <typeparam name="TDerivedEntityType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasRequiredBinding``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
      <typeparam name="TTargetType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntitySetConfiguration`1.HasRequiredBinding``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Web.Http.OData.Builder.EntitySetConfiguration{``0})">
      <typeparam name="TTargetType"></typeparam>
    </member>
    <member name="T:System.Web.Http.OData.Builder.EntityTypeConfiguration">
      <summary>Représente un <see cref="T:Microsoft.Data.Edm.IEdmEntityType" /> qui peut être créé à l'aide de <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" /> .</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.#ctor"></member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,System.Type)"></member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.Abstract">
      <summary>Marque ce type d'entité comme abstract.</summary>
      <returns>Se retourne de façon que plusieurs appels puissent être chaînés.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.AddCollectionProperty(System.Reflection.PropertyInfo)">
      <summary>Ajoute une nouvelle propriété de collection EDM à ce type d'entité.</summary>
      <returns>Retourne le <see cref="T:System.Web.Http.OData.Builder.CollectionPropertyConfiguration" /> de la propriété ajoutée.</returns>
      <param name="propertyInfo">Propriété CLR de sauvegarde.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.AddComplexProperty(System.Reflection.PropertyInfo)">
      <summary>Ajoute une nouvelle propriété complexe EDM à ce type d'entité.</summary>
      <returns>Retourne le <see cref="T:System.Web.Http.OData.Builder.ComplexPropertyConfiguration" /> de la propriété ajoutée.</returns>
      <param name="propertyInfo">Propriété CLR de sauvegarde.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.AddNavigationProperty(System.Reflection.PropertyInfo,Microsoft.Data.Edm.EdmMultiplicity)">
      <summary>Ajoute une nouvelle propriété de navigation EDM à ce type d'entité.</summary>
      <returns>Retourne le <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyConfiguration" /> de la propriété ajoutée.</returns>
      <param name="navigationProperty">Propriété CLR de sauvegarde.</param>
      <param name="multiplicity">
        <see cref="T:Microsoft.Data.Edm.EdmMultiplicity" /> de la propriété de navigation.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.AddProperty(System.Reflection.PropertyInfo)">
      <summary>Ajoute une nouvelle propriété primitive EDM à ce type d'entité.</summary>
      <returns>Retourne le <see cref="T:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration" /> de la propriété ajoutée.</returns>
      <param name="propertyInfo">Propriété CLR de sauvegarde.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration.BaseType">
      <summary>Obtient ou définit le type de base de ce type d'entité.</summary>
      <returns>Retourne <see cref="T:System.Web.Http.OData.Builder.EntityTypeConfiguration" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration.BaseTypeConfigured">
      <returns>Retourne <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.DerivesFrom(System.Web.Http.OData.Builder.EntityTypeConfiguration)">
      <summary>Définit le type de base de ce type d'entité.</summary>
      <returns>Se retourne de façon que plusieurs appels puissent être chaînés.</returns>
      <param name="baseType">Type d'entité de base.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.DerivesFromNothing">
      <summary>Définit le type de base de ce type d'entité sur null, ce qui signifie que ce type d'entité ne dérive de rien.</summary>
      <returns>Se retourne de façon que plusieurs appels puissent être chaînés.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.HasKey(System.Reflection.PropertyInfo)">
      <summary>Configure les propriétés clés de ce type d'entité.</summary>
      <returns>Se retourne de façon que plusieurs appels puissent être chaînés.</returns>
      <param name="keyProperty">Propriété à ajouter aux propriétés clés de ce type d'entité.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration.IsAbstract">
      <summary>Obtient ou définit une valeur qui indique si ce type est abstract.</summary>
      <returns>Retourne <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration.Keys">
      <summary>Obtient la collection de clés pour ce type d'entité.</summary>
      <returns>Retourne <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration.Kind">
      <summary>Obtient le <see cref="T:Microsoft.Data.Edm.EdmTypeKind" /> de ce <see cref="T:System.Web.Http.OData.Builder.IEdmTypeConfiguration" /></summary>
      <returns>Retourne <see cref="T:Microsoft.Data.Edm.EdmTypeKind" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration.NavigationProperties">
      <summary>Obtient la collection de <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyConfiguration" /> de ce type d'entité.</summary>
      <returns>Retourne <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.RemoveKey(System.Web.Http.OData.Builder.PrimitivePropertyConfiguration)">
      <summary>Supprime la propriété de la collection de clés d'entité.</summary>
      <param name="keyProperty">Clé à supprimer.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration.RemoveProperty(System.Reflection.PropertyInfo)"></member>
    <member name="T:System.Web.Http.OData.Builder.EntityTypeConfiguration`1">
      <summary>Représente un <see cref="T:Microsoft.Data.Edm.IEdmEntityType" /> qui peut être créé à l'aide de <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" /> .</summary>
      <typeparam name="TEntityType">Type CLR de sauvegarde pour ce <see cref="T:Microsoft.Data.Edm.IEdmEntityType" />.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.Abstract">
      <summary>Marque ce type d'entité comme abstract.</summary>
      <returns>Se retourne de façon que plusieurs appels puissent être chaînés.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.Action(System.String)">
      <summary>Crée une action qui lie à cet EntityType.</summary>
      <returns>ActionConfiguration pour permettre une configuration supplémentaire de la nouvelle action.</returns>
      <param name="name">Nom de l'action.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.BaseType">
      <summary>Obtient le type de base du type d'entité.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.Collection">
      <summary>Utilisé pour accéder à une collection d'entités à travers lesquelles vous pouvez configurer des actions qui sont liables à EntityCollections.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.DerivesFrom``1">
      <summary>Définit le type de base du type d'entité.</summary>
      <returns>Se retourne de façon que plusieurs appels puissent être chaînés.</returns>
      <typeparam name="TBaseType">Type d'entité de base</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.DerivesFromNothing">
      <summary>Définit le type de base de ce type d'entité null, ce qui signifie que le type d'entité ne dérive de rien.</summary>
      <returns>Se retourne de façon que plusieurs appels puissent être chaînés.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.HasKey``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Configure les propriétés clés de ce type d'entité.</summary>
      <returns>Se retourne de façon que plusieurs appels puissent être chaînés.</returns>
      <param name="keyDefinitionExpression">Expression lambda représentant la propriété à utiliser comme clé primaire. Par exemple, en C# t =&amp;gt; t.Id et dans Visual Basic .Net Function(t) t.Id.</param>
      <typeparam name="TKey">Type de clé.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.HasMany``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})">
      <summary>Configure une relation plusieurs à partir de ce type d'entité.</summary>
      <returns>Objet de configuration pouvant être utilisé pour configurer davantage la relation.</returns>
      <param name="navigationPropertyExpression">Expression lambda représentant la propriété de navigation pour la relation. Par exemple, en C# t =&amp;gt; t.MyProperty et dans Visual Basic .Net Function(t) t.MyProperty.</param>
      <typeparam name="TTargetEntity">Type d'entité à l'autre bout de la relation.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.HasOptional``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Configure une relation facultative à partir de ce type d'entité.</summary>
      <returns>Objet de configuration pouvant être utilisé pour configurer davantage la relation.</returns>
      <param name="navigationPropertyExpression">Expression lambda représentant la propriété de navigation pour la relation. Par exemple, en C# t =&amp;gt; t.MyProperty et dans Visual Basic .Net Function(t) t.MyProperty.</param>
      <typeparam name="TTargetEntity">Type d'entité à l'autre bout de la relation.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.HasRequired``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <summary>Configure une relation obligatoire à partir de ce type d'entité.</summary>
      <returns>Objet de configuration pouvant être utilisé pour configurer davantage la relation.</returns>
      <param name="navigationPropertyExpression">Expression lambda représentant la propriété de navigation pour la relation. Par exemple, en C# t =&amp;gt; t.MyProperty et dans Visual Basic .Net Function(t) t.MyProperty.</param>
      <typeparam name="TTargetEntity">Type d'entité à l'autre bout de la relation.</typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.NavigationProperties">
      <summary>Obtient la collection de <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyConfiguration" /> ce type d'entité.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.EntityTypeConfiguration`1.TransientAction(System.String)">
      <summary>Crée une action qui parfois lie à cet EntityType.</summary>
      <returns>ActionConfiguration pour permettre une configuration supplémentaire de la nouvelle action 'transient'.</returns>
      <param name="name">Nom de l'action.</param>
    </member>
    <member name="T:System.Web.Http.OData.Builder.IEdmTypeConfiguration">
      <summary>Représente un EdmType.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.ClrType">
      <summary>Le type .NET associé au EdmType.</summary>
      <returns>Retourne <see cref="T:System.Type" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.FullName">
      <summary>Nom complet (espace de noms compris) d'EdmType.</summary>
      <returns>Retourne <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.Kind">
      <summary>Genre d'EdmType. Exemples : EntityType, ComplexType, PrimitiveType, CollectionType.</summary>
      <returns>Retourne <see cref="T:Microsoft.Data.Edm.EdmTypeKind" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.ModelBuilder">
      <summary>ODataModelBuilder ayant servi à la création d'IEdmType.</summary>
      <returns>Retourne <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.Name">
      <summary>Nom de l'EdmType.</summary>
      <returns>Retourne <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.IEdmTypeConfiguration.Namespace">
      <summary>Nom d'espaces de l'EdmType.</summary>
      <returns>Retourne <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.NavigationLinkBuilder"></member>
    <member name="M:System.Web.Http.OData.Builder.NavigationLinkBuilder.#ctor(System.Func{System.Web.Http.OData.EntityInstanceContext,Microsoft.Data.Edm.IEdmNavigationProperty,System.Uri},System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Http.OData.Builder.NavigationLinkBuilder" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.NavigationLinkBuilder.Factory"></member>
    <member name="P:System.Web.Http.OData.Builder.NavigationLinkBuilder.FollowsConventions"></member>
    <member name="T:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration">
      <summary>Used to configure the binding for a navigation property for an entity set. This configuration functionality is exposed by the model builder Fluent API, see <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration.#ctor(System.Web.Http.OData.Builder.NavigationPropertyConfiguration,System.Web.Http.OData.Builder.EntitySetConfiguration)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration" /> class.</summary>
      <param name="navigationProperty">The navigation property for the binding.</param>
      <param name="entitySet">The target entity set of the binding.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration.EntitySet">
      <summary>Gets the target entity set of the binding.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.NavigationPropertyBindingConfiguration.NavigationProperty">
      <summary>Gets the navigation property of the binding.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.NavigationPropertyConfiguration"></member>
    <member name="M:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.#ctor(System.Reflection.PropertyInfo,Microsoft.Data.Edm.EdmMultiplicity,System.Web.Http.OData.Builder.EntityTypeConfiguration)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Http.OData.Builder.NavigationPropertyConfiguration" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.DeclaringEntityType"></member>
    <member name="P:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.Kind"></member>
    <member name="P:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.Multiplicity"></member>
    <member name="M:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.Optional"></member>
    <member name="P:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.RelatedClrType"></member>
    <member name="M:System.Web.Http.OData.Builder.NavigationPropertyConfiguration.Required"></member>
    <member name="T:System.Web.Http.OData.Builder.NonbindingParameterConfiguration">
      <summary> Représente un paramètre de procédure de non-liaison.   Les paramètres de non-liaison sont fournis dans le corps POST pour les actions Les paramètres de non-liaison sont fournis sous 3 formes pour les fonctions - ~/.../Function(p1=value) - ~/.../Function(p1=@x)?@x=value - ~/.../Function?p1=value (admis uniquement si la fonction est le dernier segment du chemin d'accès de l'URL).   </summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.NonbindingParameterConfiguration.#ctor(System.String,System.Web.Http.OData.Builder.IEdmTypeConfiguration)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Http.OData.Builder.NonbindingParameterConfiguration" />.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder">
      <summary>Permet de mapper automatiquement les classes CLR à un modèle EDM sur la base d'un jeu de <see cref="T:System.Web.Http.OData.Builder.Conventions.IConvention" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.#ctor">
      <summary>Initialise une nouvelle instance <see cref="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.#ctor(System.Web.Http.HttpConfiguration)">
      <summary>Initialise une nouvelle instance <see cref="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder" />.</summary>
      <param name="configuration">
        <see cref="T:System.Web.Http.HttpConfiguration" /> à utiliser.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.AddComplexType(System.Type)">
      <returns>Retourne <see cref="T:System.Web.Http.OData.Builder.ComplexTypeConfiguration" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.AddEntity(System.Type)">
      <returns>Retourne <see cref="T:System.Web.Http.OData.Builder.EntityTypeConfiguration" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.AddEntitySet(System.String,System.Web.Http.OData.Builder.EntityTypeConfiguration)">
      <returns>Retourne <see cref="T:System.Web.Http.OData.Builder.EntitySetConfiguration" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.GetEdmModel">
      <returns>Retourne <see cref="T:Microsoft.Data.Edm.IEdmModel" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.Ignore``1">
      <returns>Retourne <see cref="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder" />.</returns>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataConventionModelBuilder.Ignore(System.Type[])">
      <returns>Retourne <see cref="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataConventionModelBuilder.OnModelCreating">
      <summary>Cette action est invoquée après que le <see cref="T:System.Web.Http.OData.Builder.ODataConventionModelBuilder" /> a exécuté toutes les conventions, mais avant le verrouillage de la configuration et son utilisation pour générer le <see cref="T:Microsoft.Data.Edm.IEdmModel" />.</summary>
      <returns>Retourne <see cref="T:System.Action`1" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ODataModelBuilder">
      <summary>Mappage des classes CLR à un modèle EDM.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.#ctor"></member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.Action(System.String)">
      <summary>Ajoute une action qui ne peut être liée au générateur.</summary>
      <returns>Objet de configuration pour l'action spécifiée.</returns>
      <param name="name">Nom de l'action.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.AddComplexType(System.Type)">
      <summary>Inscrit un type complexe en tant que partie du modèle et retourne un objet pouvant être utilisé pour configurer l'entité. Cette méthode peut être appelée plusieurs fois pour la même entité afin d'effectuer plusieurs lignes de configuration.</summary>
      <returns>Objet de configuration pour le type complexe spécifié.</returns>
      <param name="type">Type à inscrire ou à configurer.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.AddEntity(System.Type)">
      <summary>Inscrit un type d'entité en tant que partie du modèle et retourne un objet pouvant être utilisé pour configurer l'entité. Cette méthode peut être appelée plusieurs fois pour la même entité afin d'effectuer plusieurs lignes de configuration.</summary>
      <returns>Objet de configuration pour le type d'entité spécifié.</returns>
      <param name="type">Type à inscrire ou à configurer.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.AddEntitySet(System.String,System.Web.Http.OData.Builder.EntityTypeConfiguration)">
      <summary>Inscrit un jeu d'entités en tant que partie du modèle et retourne un objet pouvant être utilisé pour configurer le jeu d'entité. Cette méthode peut être appelée plusieurs fois pour la même type afin d'effectuer plusieurs lignes de configuration.</summary>
      <returns>Objet de configuration pour le jeu d'entités spécifié.</returns>
      <param name="name">Nom du jeu d'entités.</param>
      <param name="entityType">Type à inscrire ou à configurer.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.AddProcedure(System.Web.Http.OData.Builder.ProcedureConfiguration)">
      <summary>Ajoute une procédure au modèle.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.ComplexType``1">
      <summary>Inscrit un type en tant que type complexe dans le modèle et retourne un objet pouvant être utilisé pour configurer le type complexe. Cette méthode peut être appelée plusieurs fois pour la même type afin d'effectuer plusieurs lignes de configuration.</summary>
      <returns>Objet de configuration pour le type complexe spécifié.</returns>
      <typeparam name="TComplexType">Type à inscrire ou à configurer.</typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.ContainerName">
      <summary>Obtient ou définit le nom du conteneur qui contiendra tous les EntitySets, Actions et Functions.</summary>
      <returns>Retourne <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.DataServiceVersion">
      <summary>Obtient ou définit la version du service de données du modèle. La valeur par défaut est 3.0.</summary>
      <returns>Retourne <see cref="T:System.Version" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.Entity``1">
      <summary>Inscrit un type d'entité en tant que partie du modèle et retourne un objet pouvant être utilisé pour configurer l'entité. Cette méthode peut être appelée plusieurs fois pour la même entité afin d'effectuer plusieurs lignes de configuration.</summary>
      <returns>Objet de configuration pour le type d'entité spécifié.</returns>
      <typeparam name="TEntityType">Type à inscrire ou à configurer.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.EntitySet``1(System.String)">
      <summary>Inscrit un jeu d'entités en tant que partie du modèle et retourne un objet pouvant être utilisé pour configurer le jeu d'entité. Cette méthode peut être appelée plusieurs fois pour la même type afin d'effectuer plusieurs lignes de configuration.</summary>
      <returns>Objet de configuration pour le jeu d'entités spécifié.</returns>
      <param name="name">Nom du jeu d'entités.</param>
      <typeparam name="TEntityType">Type d'entité du jeu d'entités.</typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.EntitySets">
      <summary>Obtient la collection de jeux d'entités EDM dans le modèle à construire.</summary>
      <returns>Retourne <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.GetEdmModel">
      <summary>Crée un <see cref="T:Microsoft.Data.Edm.IEdmModel" /> selon la configuration effectuée à l'aide de ce générateur.</summary>
      <returns>Le modèle a été construit.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.GetTypeConfigurationOrNull(System.Type)">
      <summary>Tente de trouver soit un type structurel préconfiguré soit un type primitif correspondant à T. Si aucune correspondance n'est trouvée, la valeur NULL est retournée.</summary>
      <returns>Retourne <see cref="T:System.Web.Http.OData.Builder.IEdmTypeConfiguration" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.MaxDataServiceVersion">
      <summary>Obtient ou définit la version du service de données maximum du modèle. La valeur par défaut est 3.0.</summary>
      <returns>Retourne <see cref="T:System.Version" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.Namespace">
      <summary>Obtient ou définit l'espace de noms qui sera utilisé pour le modèle obtenu.</summary>
      <returns>Retourne <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.Procedures">
      <summary>Obtient la collection de procédures (Actions, Functions et ServiceOperations) dans le modèle à construire.</summary>
      <returns>Retourne <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.RemoveEntitySet(System.String)">
      <summary>Supprime le jeu d'entités du modèle.</summary>
      <returns>
        <see cref="" /> si le jeu d'entités est présent dans le modèle, <see cref="" /> autrement.</returns>
      <param name="name">Nom du jeu d'entités à supprimer.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.RemoveProcedure(System.String)">
      <summary>      Supprime la procédure du modèle.</summary>
      <returns>true si la procédure est présente dans le modèle ; sinon, false.</returns>
      <param name="name">Nom de la procédure à supprimer.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.RemoveProcedure(System.Web.Http.OData.Builder.ProcedureConfiguration)">
      <summary>Supprime la procédure du modèle.</summary>
      <returns>true si la procédure est présente dans le modèle ; sinon, false.</returns>
      <param name="procedure">Procédure à supprimer.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ODataModelBuilder.RemoveStructuralType(System.Type)">
      <summary>Supprime le type du modèle.</summary>
      <returns>true si le type est présent dans le modèle ; sinon, false.</returns>
      <param name="type">Type à supprimer.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ODataModelBuilder.StructuralTypes">
      <summary>Obtient la collection des types EDM dans le modèle à construire.</summary>
      <returns>Retourne <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ParameterConfiguration">
      <summary>Représente un paramètre pour une procédure</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ParameterConfiguration.#ctor(System.String,System.Web.Http.OData.Builder.IEdmTypeConfiguration)"></member>
    <member name="P:System.Web.Http.OData.Builder.ParameterConfiguration.Name">
      <summary>Nom du paramètre.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ParameterConfiguration.TypeConfiguration">
      <summary>Type du paramètre.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration">
      <summary>Permet de configurer une propriété primitive de type entité ou de type complexe. Cette fonctionnalité de configuration est exposée par l'API Fluent du générateur de modèles, voir <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" /> .</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration.#ctor(System.Reflection.PropertyInfo,System.Web.Http.OData.Builder.StructuralTypeConfiguration)"></member>
    <member name="M:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration.IsOptional">
      <summary>Configure la propriété comme étant optionnelle.</summary>
      <returns>Se retourne de façon que plusieurs appels puissent être chaînés.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration.IsRequired">
      <summary>Configure la propriété comme étant obligatoire.</summary>
      <returns>Se retourne de façon que plusieurs appels puissent être chaînés.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration.Kind"></member>
    <member name="P:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration.RelatedClrType"></member>
    <member name="T:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration">
      <summary>Représente un PrimitiveType</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,Microsoft.Data.Edm.IEdmPrimitiveType,System.Type)">
      <summary>Ce constructeur est public uniquement à des fins de tests unitaires. Pour obtenir un PrimitiveTypeConfiguration, utilisez ODataModelBuilder.GetTypeConfigurationOrNull(Type)</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.ClrType"></member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.EdmPrimitiveType">
      <summary>Retourne l'instance IEdmPrimitiveType associée à ce PrimitiveTypeConfiguration</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.FullName"></member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.Kind"></member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.ModelBuilder"></member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.Name"></member>
    <member name="P:System.Web.Http.OData.Builder.PrimitiveTypeConfiguration.Namespace"></member>
    <member name="T:System.Web.Http.OData.Builder.ProcedureConfiguration">
      <summary>Représente une procédure qui est exposée dans le modèle.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.ProcedureConfiguration.#ctor"></member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.ContainerQualifiedName">
      <summary>Nom complet de la procédure lors d'une utilisation dans les URL OData. La qualification est requise pour distinguer la procédure des autres identificateurs en une seule partie possibles.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.EntitySet">
      <summary>EntitySet à partir duquel les entités sont retournées.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.FullName">
      <summary>Le FullName est le ContainerQualifiedName.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.FullyQualifiedName">
      <summary>Le FullyQualifiedName est le ContainerQualifiedName spécifié de manière plus approfondie à l'aide de l'espace de noms. Généralement, ceci n'est pas nécessaire car la plupart des services ont au plus un conteneur ayant le même nom.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.IsAlwaysBindable">
      <summary>En cas de procédure IsBindable, elle peut toujours être liée.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.IsBindable">
      <summary>La procédure peut être liée à une URL représentant le BindingParameter.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.IsComposable">
      <summary>La procédure peut servir à la composition. Par exemple, une URL qui invoque la procédure peut être utilisée comme URL de base pour une requête qui invoque la procédure et fait quelque chose d'autre avec les résultats.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.IsSideEffecting">
      <summary>La procédure a des effets secondaires.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.Kind">
      <summary>Le genre de procédure qui peut être une action, une fonction ou un ServiceOperation</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.ModelBuilder"></member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.Name">
      <summary>Nom de la procédure</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.Parameters">
      <summary>Paramètre que prend la procédure</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.ProcedureConfiguration.ReturnType">
      <summary>Type retourné quand la procédure est invoquée.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.ProcedureKind">
      <summary>Genre de procédure OData. Action, fonction ou ServiceOperation.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Builder.ProcedureKind.Action">
      <summary />
    </member>
    <member name="F:System.Web.Http.OData.Builder.ProcedureKind.Function">
      <summary />
    </member>
    <member name="F:System.Web.Http.OData.Builder.ProcedureKind.ServiceOperation">
      <summary />
    </member>
    <member name="T:System.Web.Http.OData.Builder.PropertyConfiguration">
      <summary>Classe de base pour toutes les configurations des propriétés.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.PropertyConfiguration.#ctor(System.Reflection.PropertyInfo,System.Web.Http.OData.Builder.StructuralTypeConfiguration)"></member>
    <member name="P:System.Web.Http.OData.Builder.PropertyConfiguration.AddedExplicitly">
      <returns>Retourne <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PropertyConfiguration.DeclaringType">
      <returns>Retourne <see cref="T:System.Web.Http.OData.Builder.StructuralTypeConfiguration" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PropertyConfiguration.Kind">
      <summary>Obtient le <see cref="T:System.Web.Http.OData.Builder.PropertyKind" /> de la propriété.</summary>
      <returns>Retourne <see cref="T:System.Web.Http.OData.Builder.PropertyKind" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PropertyConfiguration.Name">
      <summary>Obtient le nom de la propriété.</summary>
      <returns>Retourne <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PropertyConfiguration.PropertyInfo">
      <summary>Obtient l'instance <see cref="P:System.Web.Http.OData.Builder.PropertyConfiguration.PropertyInfo" /> du CLR de mappage.</summary>
      <returns>Retourne <see cref="T:System.Reflection.PropertyInfo" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Builder.PropertyConfiguration.RelatedClrType">
      <summary>Obtient le <see cref="T:System.Type" /> CLR de la propriété.</summary>
      <returns>Retourne <see cref="T:System.Type" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Builder.PropertyKind"></member>
    <member name="F:System.Web.Http.OData.Builder.PropertyKind.Primitive">
      <summary>.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Builder.PropertyKind.Complex">
      <summary>.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Builder.PropertyKind.Collection">
      <summary>.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Builder.PropertyKind.Navigation">
      <summary>.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.SelfLinkBuilder`1">
      <summary> Encapsule une fabrique d'éléments sel link et indique si la fabrique de liens suit ou non les conventions. </summary>
      <typeparam name="T">Type d'élément self link généré. Ceci doit concerner les liens ID ainsi que les liens de lecture et d'édition.</typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.SelfLinkBuilder`1.#ctor(System.Func{System.Web.Http.OData.EntityInstanceContext,`0},System.Boolean)">
      <summary> Construit une nouvelle instance de <see cref="T:System.Web.Http.OData.Builder.SelfLinkBuilder`1" />. </summary>
      <param name="linkFactory">Fabrique de liens.</param>
      <param name="followsConventions">Indique si la fabrique suit les conventions odata pour la génération des liens.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.SelfLinkBuilder`1.Factory">
      <summary> Obtient la fabrique de génération des liens. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.SelfLinkBuilder`1.FollowsConventions">
      <summary> Obtient une valeur booléenne indiquant si la fabrique de liens suit ou non les conventions OData. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Builder.StructuralPropertyConfiguration">
      <summary>Classe de base pour toutes les configurations des propriétés structurelles.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralPropertyConfiguration.#ctor(System.Reflection.PropertyInfo,System.Web.Http.OData.Builder.StructuralTypeConfiguration)"></member>
    <member name="P:System.Web.Http.OData.Builder.StructuralPropertyConfiguration.OptionalProperty"></member>
    <member name="T:System.Web.Http.OData.Builder.StructuralTypeConfiguration">
      <summary>Représente un <see cref="T:Microsoft.Data.Edm.IEdmStructuredType" /> qui peut être créé à l'aide de <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" /> .</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration.#ctor"></member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration.#ctor(System.Web.Http.OData.Builder.ODataModelBuilder,System.Type)"></member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration.AddCollectionProperty(System.Reflection.PropertyInfo)">
      <summary>Ajoute une propriété de collection à ce type edm.</summary>
      <returns>L'instance <see cref="T:System.Web.Http.OData.Builder.CollectionPropertyConfiguration" /> pour une configuration supplémentaire de la propriété.</returns>
      <param name="propertyInfo">Propriété qui est ajoutée.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration.AddComplexProperty(System.Reflection.PropertyInfo)">
      <summary>Ajoute une propriété complexe à ce type edm.</summary>
      <returns>L'instance <see cref="T:System.Web.Http.OData.Builder.ComplexPropertyConfiguration" /> pour une configuration supplémentaire de la propriété.</returns>
      <param name="propertyInfo">Propriété qui est ajoutée.</param>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration.AddProperty(System.Reflection.PropertyInfo)">
      <summary>Ajoute une propriété primitive à ce type edm.</summary>
      <returns>L'instance <see cref="T:System.Web.Http.OData.Builder.PrimitivePropertyConfiguration" /> pour une configuration supplémentaire de la propriété.</returns>
      <param name="propertyInfo">Propriété qui est ajoutée.</param>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.ClrType">
      <summary>Obtient le <see cref="T:System.Type" /> du CLR de sauvegarde.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.ExplicitProperties"></member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.FullName">
      <summary>Obtient le nom complet du type de cet edm.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.IgnoredProperties">
      <summary>Obtient du type CLR de sauvegarde les propriétés qui doivent être ignorées sur ce type edm.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.Kind">
      <summary>Obtient l'instance <see cref="T:Microsoft.Data.Edm.EdmTypeKind" /> de ce type edm.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.ModelBuilder">
      <summary>
        <see cref="T:System.Web.Http.OData.Builder.ODataModelBuilder" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.Name">
      <summary>Obtient le nom de ce type edm.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.Namespace">
      <summary>Obtient l'espace de noms de ce type edm.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.Properties">
      <summary>Obtient les propriétés déclarées de ce type edm.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration.RemovedProperties"></member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration.RemoveProperty(System.Reflection.PropertyInfo)">
      <summary>Supprime la propriété donnée.</summary>
      <param name="propertyInfo">Propriété qui est supprimée.</param>
    </member>
    <member name="T:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1">
      <typeparam name="TStructuralType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.#ctor(System.Web.Http.OData.Builder.StructuralTypeConfiguration)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.CollectionProperty``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})">
      <typeparam name="TElementType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.ComplexProperty``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <typeparam name="TComplexType"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Ignore``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <typeparam name="TProperty"></typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Properties"></member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Byte[]}})"></member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.IO.Stream}})"></member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Property``1(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{``0}}})">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.String}})"></member>
    <member name="M:System.Web.Http.OData.Builder.StructuralTypeConfiguration`1.Property``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
      <typeparam name="T"></typeparam>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter">
      <summary>Classe <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> pour gérer OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.CanReadType(System.Type)">
      <returns>Retourne <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.CanWriteType(System.Type)">
      <returns>Retourne <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.GetPerRequestFormatterInstance(System.Type,System.Net.Http.HttpRequestMessage,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <returns>Retourne <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.MessageReaderQuotas">
      <summary>Obtient ou définit <see cref="T:Microsoft.Data.OData.ODataMessageQuotas" /> que ce formateur utilise côté lecture.</summary>
      <returns>Retourne <see cref="T:Microsoft.Data.OData.ODataMessageQuotas" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.MessageWriterQuotas">
      <summary>Obtient ou définit <see cref="T:Microsoft.Data.OData.ODataMessageQuotas" /> que ce formateur utilise côté écriture.</summary>
      <returns>Retourne <see cref="T:Microsoft.Data.OData.ODataMessageQuotas" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,System.Net.Http.Formatting.IFormatterLogger)">
      <returns>Retourne <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.SetDefaultContentHeaders(System.Type,System.Net.Http.Headers.HttpContentHeaders,System.Net.Http.Headers.MediaTypeHeaderValue)"></member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatter.WriteToStreamAsync(System.Type,System.Object,System.IO.Stream,System.Net.Http.HttpContent,System.Net.TransportContext)">
      <returns>Retourne <see cref="T:System.Threading.Tasks.Task" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.ODataMediaTypeFormatters">
      <summary>Classes <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> pour gérer OData.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataMediaTypeFormatters.Create">
      <summary>Crée un jeu de formateurs de type de média pour gérer OData.</summary>
      <returns>Jeu de formateurs de type média pour gérer OData.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Formatter.ODataModelBinderProvider">
      <summary>Fournit une instance <see cref="T:System.Web.Http.ModelBinding.IModelBinder" /> pour les types primitifs EDM.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Formatter.ODataModelBinderProvider.#ctor"></member>
    <member name="M:System.Web.Http.OData.Formatter.ODataModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)"></member>
    <member name="T:System.Web.Http.OData.Query.AllowedArithmeticOperators">
      <summary> Opérateurs arithmétiques à autoriser les requêtes à l'aide de $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.None">
      <summary> Valeur correspondante pour n'autoriser aucun opérateur arithmétique dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.Add">
      <summary> Valeur correspondante pour autoriser l'opérateur arithmétique 'Add' dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.Subtract">
      <summary> Valeur correspondante pour autoriser l'opérateur arithmétique 'Subtract' dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.Multiply">
      <summary> Valeur correspondante pour autoriser l'opérateur arithmétique 'Multiply' dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.Divide">
      <summary> Valeur correspondante pour autoriser l'opérateur arithmétique 'Divide' dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.Modulo">
      <summary> Valeur correspondante pour autoriser l'opérateur arithmétique 'Modulo' dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedArithmeticOperators.All">
      <summary> Valeur correspondante pour autoriser tous les opérateurs arithmétiques dans $filter. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.AllowedFunctions">
      <summary> Fonctions à autoriser pour les requêtes à l'aide de $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.None">
      <summary> Valeur qui correspond à n'autoriser aucune fonction dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.StartsWith">
      <summary> Valeur qui correspond à autoriser la fonction 'StartsWit' dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.EndsWith">
      <summary> Valeur qui correspond à autoriser la fonction 'EndsWith' dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.SubstringOf">
      <summary> Valeur qui correspond à autoriser la fonction 'SubstringOf' dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Length">
      <summary> Valeur qui correspond à autoriser la fonction 'Length' dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.IndexOf">
      <summary> Valeur qui correspond à autoriser la fonction 'IndexOf' dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Concat">
      <summary> Valeur qui correspond à autoriser la fonction 'Concat' dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Substring">
      <summary> Valeur qui correspond à autoriser la fonction 'Substring' dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.ToLower">
      <summary> Valeur qui correspond à autoriser la fonction 'ToLower' dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.ToUpper">
      <summary> Valeur qui correspond à autoriser la fonction 'ToUpper' dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Trim">
      <summary> Valeur qui correspond à autoriser la fonction 'Trim' dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Cast">
      <summary> Valeur qui correspond à autoriser la fonction 'Cast' dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Year">
      <summary> Valeur qui correspond à autoriser la fonction 'Year' dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Years">
      <summary> Valeur qui correspond à autoriser la fonction 'Years' dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Month">
      <summary> Valeur qui correspond à autoriser la fonction 'Month' dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Months">
      <summary> Valeur qui correspond à autoriser la fonction 'Months' dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Day">
      <summary> Valeur qui correspond à autoriser la fonction 'Day' dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Days">
      <summary> Valeur qui correspond à autoriser la fonction 'Days' dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Hour">
      <summary> Valeur qui correspond à autoriser la fonction 'Hour' dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Hours">
      <summary> Valeur qui correspond à autoriser la fonction 'Hours' dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Minute">
      <summary> Valeur qui correspond à autoriser la fonction 'Minute' dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Minutes">
      <summary> Valeur qui correspond à autoriser la fonction 'Minutes' dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Second">
      <summary> Valeur qui correspond à autoriser la fonction 'Second' dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Seconds">
      <summary> Valeur qui correspond à autoriser la fonction 'Seconds' dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Round">
      <summary> Valeur qui correspond à autoriser la fonction 'Round' dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Floor">
      <summary> Valeur qui correspond à autoriser la fonction 'Floor' dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Ceiling">
      <summary> Valeur qui correspond à autoriser la fonction 'Ceiling' dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.IsOf">
      <summary> Valeur qui correspond à autoriser la fonction 'IsOf' dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.Any">
      <summary> Valeur qui correspond à autoriser la fonction 'Any' dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.All">
      <summary> Valeur qui correspond à autoriser la fonction 'All' dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.AllStringFunctions">
      <summary> Valeur qui correspond à autoriser toutes les fonctions apparentées à string dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.AllDateTimeFunctions">
      <summary> Valeur qui correspond à autoriser toutes les fonctions apparentées à datetime dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.AllMathFunctions">
      <summary> Valeur qui correspond à autoriser les fonction apparentées à math dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedFunctions.AllFunctions">
      <summary> Valeur qui correspond à autoriser toutes les fonctions dans $filter. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.AllowedLogicalOperators">
      <summary> Opérateurs logiques pour permettre les requêtes à l'aide de $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.None">
      <summary> Valeur correspondante pour n'autoriser aucun opérateur logique dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.Or">
      <summary> Valeur correspondante pour autoriser l'opérateur logique 'Or' dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.And">
      <summary> Valeur correspondante pour autoriser l'opérateur logique 'And' dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.Equal">
      <summary> Valeur correspondante pour autoriser l'opérateur logique 'Equal' dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.NotEqual">
      <summary> Valeur correspondante pour autoriser l'opérateur logique 'NotEqual' dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.GreaterThan">
      <summary> Valeur correspondante pour autoriser l'opérateur logique 'GreaterThan' dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.GreaterThanOrEqual">
      <summary> Valeur correspondante pour autoriser l'opérateur logique 'GreaterThanOrEqual' dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.LessThan">
      <summary> Valeur correspondante pour autoriser l'opérateur logique 'LessThan' dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.LessThanOrEqual">
      <summary> Valeur correspondante pour autoriser l'opérateur logique 'LessThanOrEqual' dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.Not">
      <summary> Valeur correspondante pour autoriser l'opérateur logique 'Not' dans $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedLogicalOperators.All">
      <summary> Valeur correspondante pour autoriser tous les opérateurs logiques dans $filter. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.AllowedQueryOptions">
      <summary> Options de requête OData à autoriser pour les requêtes. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.None">
      <summary> Valeur correspondant à l'autorisation d'aucune option de requête. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Filter">
      <summary> Valeur correspondant à l'autorisation de l'option de requête $filter. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Expand">
      <summary> Valeur correspondant à l'autorisation de l'option de requête $expand. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Select">
      <summary> Valeur correspondant à l'autorisation de l'option de requête $select. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.OrderBy">
      <summary> Valeur correspondant à l'autorisation de l'option de requête $orderby. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Top">
      <summary> Valeur correspondant à l'autorisation de l'option de requête $top. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Skip">
      <summary> Valeur correspondant à l'autorisation de l'option de requête $skip. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.InlineCount">
      <summary> Valeur correspondant à l'autorisation de l'option de requête $inlinecount. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Format">
      <summary> Valeur correspondant à l'autorisation de l'option de requête $format. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.SkipToken">
      <summary> Valeur correspondant à l'autorisation de l'option de requête $skiptoken. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.Supported">
      <summary> Valeur correspondant aux options de requête par défaut prises en charge par <see cref="T:System.Web.Http.QueryableAttribute" />. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.AllowedQueryOptions.All">
      <summary> Valeur correspondant à l'autorisation de toutes les options de requête. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.FilterQueryOption">
      <summary>Définit une option de requête OData $filter pour les requêtes.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.FilterQueryOption.#ctor(System.String,System.Web.Http.OData.ODataQueryContext)">
      <summary>Initialise une nouvelle instance de <see cref="T:System.Web.Http.OData.Query.FilterQueryOption" /> sur la base de la valeur brute $filter et d'un EdmModel à partir de <see cref="T:System.Web.Http.OData.ODataQueryContext" /> .</summary>
      <param name="rawValue">Valeur brute pour la requête $filter. La valeur peut être null ou vide.</param>
      <param name="context">L'instance <see cref="T:System.Web.Http.OData.ODataQueryContext" /> contenant <see cref="T:Microsoft.Data.Edm.IEdmModel" /> et un certain type d'informations</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.FilterQueryOption.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Applique la requête de filtre au IQueryable donné.</summary>
      <returns>Requête à laquelle la requête de filtre est appliquée.</returns>
      <param name="query">IQueryable auquel la requête de filtre est appliquée.</param>
      <param name="querySettings">Spécifie s'il faut gérer une propagation null. Passe False si le fournisseur de requête sous-jacent gère une propagation null. Autrement, passe True.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.FilterQueryOption.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings,System.Web.Http.Dispatcher.IAssembliesResolver)">
      <summary>Applique la requête de filtre au IQueryable donné.</summary>
      <returns>Retourne <see cref="T:System.Linq.IQueryable" />.</returns>
      <param name="query">IQueryable auquel la requête de filtre est appliquée.</param>
      <param name="querySettings">Spécifie s'il faut gérer une propagation null. Passe False si le fournisseur de requête sous-jacent gère une propagation null. Autrement, passe True.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.FilterQueryOption.Context">
      <summary>Obtient l'instance <see cref="T:System.Web.Http.OData.ODataQueryContext" /> donnée.</summary>
      <returns>Retourne <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.FilterQueryOption.FilterClause">
      <summary>Obtient le <see cref="P:System.Web.Http.OData.Query.FilterQueryOption.FilterClause" /> analysé pour cette option de requête.</summary>
      <returns>Retourne <see cref="T:Microsoft.Data.OData.Query.SemanticAst.FilterClause" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.FilterQueryOption.RawValue">
      <summary>Obtient la valeur $filter brute.</summary>
      <returns>Retourne <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Query.FilterQueryOption.Validate(System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Valider la requête de filtre sur la base du <paramref name="validationSettings" /> donné. Lève une ODataException en cas d'échec de la validation.</summary>
      <param name="validationSettings">L'instance <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" /> contenant tous les paramètres de validation.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.FilterQueryOption.Validator">
      <summary>Obtient ou définit le validateur de requête Filter.</summary>
      <returns>Retourne <see cref="T:System.Web.Http.OData.Query.Validators.FilterQueryValidator" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Query.HandleNullPropagationOption">
      <summary>Cet enum définit comment gérer une propagation null dans une prise en charge requêtable (queryable).</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.HandleNullPropagationOption.Default">
      <summary>Déterminer comment gérer une propagation null sur la base du fournisseur de requête pendant la composition de la requête. C'est la valeur par défaut utilisée dans <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" />.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.HandleNullPropagationOption.True">
      <summary>Gérer la propagation null pendant la composition de requête.</summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.HandleNullPropagationOption.False">
      <summary>Ne pas gérer la propagation null pendant la composition de requête.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.InlineCountQueryOption">
      <summary> Représente la valeur de l'option de requête $inlinecount et expose une façon de récupérer le nombre d'entités satisfaisant une requête. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.InlineCountQueryOption.#ctor(System.String,System.Web.Http.OData.ODataQueryContext)">
      <summary> Initialise une nouvelle instance de la classe <see cref="T:System.Web.Http.OData.Query.InlineCountQueryOption" />. </summary>
      <param name="rawValue">Valeur brute de l'option de requête $inlinecount.</param>
      <param name="context">L'instance <see cref="T:System.Web.Http.OData.ODataQueryContext" /> contenant <see cref="T:Microsoft.Data.Edm.IEdmModel" /> et un certain type d'informations</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.InlineCountQueryOption.Context">
      <summary> Obtient l'instance <see cref="T:System.Web.Http.OData.ODataQueryContext" /> donnée. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.InlineCountQueryOption.GetEntityCount(System.Linq.IQueryable)">
      <summary> Obtient le nombre d'entités satisfaisant la requête donnée si la réponse doit inclure un nombre inline, sinon la valeur est null. </summary>
      <returns>Nombre d'entités satisfaisant la requête spécifiée si la réponse doit inclure un nombre inline, sinon la valeur est null.</returns>
      <param name="query">Requête pour laquelle le nombre doit être calculé.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.InlineCountQueryOption.RawValue">
      <summary> Obtient la valeur $inlinecount brute. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.InlineCountQueryOption.Value">
      <summary> Obtient la valeur de $inlinecount dans un formulaire analysé. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.InlineCountValue">
      <summary> Définit une énumération pour les valeurs des options de requête $inlinecount. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.InlineCountValue.None">
      <summary> Correspond à la valeur de l'option de requête 'none' $inlinecount. </summary>
    </member>
    <member name="F:System.Web.Http.OData.Query.InlineCountValue.AllPages">
      <summary> Correspond à la valeur de l'option de requête 'allpages' $inlinecount. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.ODataQueryOptions">
      <summary>Définit des options de requête OData composites pouvant être utilisées pour effectuer une composition de requête. Ceci ne prend en charge actuellement que $filter, $orderby, $top, $skip et $inlinecount.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.#ctor(System.Web.Http.OData.ODataQueryContext,System.Net.Http.HttpRequestMessage)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions" /> sur la base de la demande entrante et certaines informations de métadonnées de <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</summary>
      <param name="context">L'instance <see cref="T:System.Web.Http.OData.ODataQueryContext" /> contenant <see cref="T:Microsoft.Data.Edm.IEdmModel" /> et un certain type d'informations</param>
      <param name="request">Message de la demande entrante</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.ApplyTo(System.Linq.IQueryable)">
      <summary>  Appliquer la requête individuelle au IQueryable donné dans le bon ordre.</summary>
      <returns>Requête à laquelle la requête est appliquée.</returns>
      <param name="query">IQueryable auquel la requête est appliquée.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Appliquer la requête individuelle au IQueryable donné dans le bon ordre.</summary>
      <returns>Requête à laquelle la requête est appliquée.</returns>
      <param name="query">IQueryable auquel la requête est appliquée.</param>
      <param name="querySettings">Paramètres à utiliser dans la composition de la requête.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Context">
      <summary>Obtient l'instance <see cref="T:System.Web.Http.OData.ODataQueryContext" /> donnée.</summary>
      <returns>Retourne <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Filter">
      <summary>Obtient la <see cref="T:System.Web.Http.OData.Query.FilterQueryOption" />.</summary>
      <returns>Retourne <see cref="T:System.Web.Http.OData.Query.FilterQueryOption" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.InlineCount">
      <summary>Obtient la <see cref="T:System.Web.Http.OData.Query.InlineCountQueryOption" />.</summary>
      <returns>Retourne <see cref="T:System.Web.Http.OData.Query.InlineCountQueryOption" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.IsSystemQueryOption(System.String)">
      <summary>Vérifier si l'option de requête donnée est une option de requête système OData.</summary>
      <returns>true si l'option de requête est une option de requête système OData ; autrement, false.</returns>
      <param name="queryOptionName">Nom de l'option de requête.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.LimitResults``1(System.Linq.IQueryable{``0},System.Int32,System.Boolean@)">
      <summary>Limite les résultats de la requête à un nombre maximum de résultats.</summary>
      <returns>Résultats de la requête limités.</returns>
      <param name="queryable">L'instance requêtable (queryable) à limiter.</param>
      <param name="limit">Limite de résultats de la requête.</param>
      <param name="resultsLimited">true si les résultats de la requête étaient limités ; false autrement</param>
      <typeparam name="T">Type CLR d'entité</typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.OrderBy">
      <summary>Obtient la <see cref="T:System.Web.Http.OData.Query.OrderByQueryOption" />.</summary>
      <returns>Retourne <see cref="T:System.Web.Http.OData.Query.OrderByQueryOption" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.RawValues">
      <summary>Obtient la chaîne brute de toutes les options de requête OData</summary>
      <returns>Retourne <see cref="T:System.Web.Http.OData.Query.ODataRawQueryOptions" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Request">
      <summary>Obtient le message de demande associé à cette instance.</summary>
      <returns>Retourne <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Skip">
      <summary>Obtient la <see cref="T:System.Web.Http.OData.Query.SkipQueryOption" />.</summary>
      <returns>Retourne <see cref="T:System.Web.Http.OData.Query.SkipQueryOption" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Top">
      <summary>Obtient la <see cref="T:System.Web.Http.OData.Query.TopQueryOption" />.</summary>
      <returns>Retourne <see cref="T:System.Web.Http.OData.Query.TopQueryOption" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions.Validate(System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Valider toutes les requêtes OData, notamment $skip, $top, $orderby and $filter, sur la base de l'instance <paramref name="validationSettings" /> donnée. Lève une ODataException en cas d'échec de la validation.</summary>
      <param name="validationSettings">L'instance <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" /> contenant tous les paramètres de validation.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQueryOptions.Validator">
      <summary>Obtient ou définit le validateur de requête.</summary>
      <returns>Retourne <see cref="T:System.Web.Http.OData.Query.Validators.ODataQueryValidator" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Query.ODataQueryOptions`1">
      <summary>Définit des options de requête OData composites pouvant être utilisées pour effectuer une composition de requête. Ceci ne prend en charge actuellement que $filter, $orderby, $top, $skip.</summary>
      <typeparam name="TEntity"></typeparam>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions`1.#ctor(System.Web.Http.OData.ODataQueryContext,System.Net.Http.HttpRequestMessage)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions" /> sur la base de la demande entrante et certaines informations de métadonnées de <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</summary>
      <param name="context">L'instance <see cref="T:System.Web.Http.OData.ODataQueryContext" /> contenant <see cref="T:Microsoft.Data.Edm.IEdmModel" /> et un certain type d'informations</param>
      <param name="request">Message de la demande entrante</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions`1.ApplyTo(System.Linq.IQueryable)">
      <summary>Appliquer la requête individuelle au IQueryable donné dans le bon ordre.</summary>
      <returns>Requête à laquelle la requête est appliquée.</returns>
      <param name="query">IQueryable auquel la requête est appliquée.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQueryOptions`1.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Appliquer la requête individuelle au IQueryable donné dans le bon ordre.</summary>
      <returns>Requête à laquelle la requête est appliquée.</returns>
      <param name="query">IQueryable auquel la requête est appliquée.</param>
      <param name="querySettings">Paramètres à utiliser dans la composition de la requête.</param>
    </member>
    <member name="T:System.Web.Http.OData.Query.ODataQuerySettings">
      <summary>Cette classe décrit les paramètres à utiliser durant la composition de la requête.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQuerySettings.#ctor">
      <summary>Instancie une nouvelle instance de la classe <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" /> et initialise les paramètres par défaut.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataQuerySettings.#ctor(System.Web.Http.OData.Query.ODataQuerySettings)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Http.OData.Query.ODataQuerySettings" /> sur la base d'une classe existante.</summary>
      <param name="settings">Le paramètre à partir duquel copier.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQuerySettings.EnableConstantParameterization">
      <summary>Obtient ou définit une valeur indiquant si les constantes doivent être paramétrées. Le paramétrage des constantes doit se traduire par de meilleures performances avec Entity Framework.</summary>
      <returns>La valeur par défaut est true.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQuerySettings.EnsureStableOrdering">
      <summary>Obtient ou définit une valeur indiquant si la composition de la requête doit, au besoin, modifier la requête d'origine pour assurer un ordre de tri stable.</summary>
      <returns>Une valeur true indique que la requête d'origine doit, au besoin, être modifiée pour assurer un ordre de tri stable. Une valeur false indique que l'ordre de tri peut être considéré comme stable sans modification de la requête. Les fournisseurs de requêtes qui assurent un ordre de tri stable doivent définir cette valeur sur false. La valeur par défaut est true.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQuerySettings.HandleNullPropagation">
      <summary>Obtient ou définit une valeur indiquant comment la propagation null doit être gérée lors de la composition de requête.</summary>
      <returns>La valeur par défaut est <see cref="F:System.Web.Http.OData.Query.HandleNullPropagationOption.Default" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataQuerySettings.PageSize">
      <summary>Obtient ou définit le nombre maximum de résultats de requête à retourner.</summary>
      <returns>Nombre maximum de résultats à retourner, ou valeur null à défaut de limite.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Query.ODataRawQueryOptions">
      <summary>Représente les valeurs des requêtes brutes dans le format chaîne à partir de la demande entrante</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataRawQueryOptions.#ctor"></member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.Expand">
      <summary>Obtient la valeur de requête $expand brute de la demande entrante si l'URI existe.</summary>
      <returns>Retourne <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.Filter">
      <summary>Obtient la valeur de requête $filter brute de la demande entrante si l'URI existe.</summary>
      <returns>Retourne <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.Format">
      <summary>Obtient la valeur de requête $format brute de la demande entrante si l'URI existe.</summary>
      <returns>Retourne <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.InlineCount">
      <summary>Obtient la valeur de requête $inlineCount brute de la demande entrante si l'URI existe.</summary>
      <returns>Retourne <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.OrderBy">
      <summary>Obtient la valeur de requête $orderby brute de la demande entrante si l'URI existe.</summary>
      <returns>Retourne <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.Select">
      <summary>Obtient la valeur de requête $select brute de la demande entrante si l'URI existe.</summary>
      <returns>Retourne <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.Skip">
      <summary>Obtient la valeur de requête $skip brute de la demande entrante si l'URI existe.</summary>
      <returns>Retourne <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.SkipToken">
      <summary>Obtient la valeur de requête $skiptoken brute de la demande entrante si l'URI existe.</summary>
      <returns>Retourne <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataRawQueryOptions.Top">
      <summary>Obtient la valeur de requête $top brute de la demande entrante si l'URI existe.</summary>
      <returns>Retourne <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Query.ODataValidationSettings">
      <summary> Cette classe décrit les paramètres de validation pour les requêtes. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.ODataValidationSettings.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.AllowedArithmeticOperators">
      <summary> Obtient ou définit une liste d'opérateurs arithmétiques autorisés, notamment 'add', 'sub', 'mul', 'div', 'mod'. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.AllowedFunctions">
      <summary>  Obtient ou définit une liste de fonctions autorisées utilisées dans la requête $filter.         </summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.AllowedLogicalOperators">
      <summary> Obtient ou définit une liste d'opérateurs logiques autorisés, comme 'eq', 'ne', 'gt', 'ge', 'lt', 'le', 'and', 'or', 'not'. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.AllowedOrderByProperties">
      <summary> Obtient une liste de propriétés avec lesquelles le résultat peut être trié (orderby). Cette liste est vide par défaut, ce qui signifie qu'elle peut être triée selon n'importe quelles propriétés.  Par exemple, le fait d'avoir une collection vide signifie que le client peut classer le résultat requêtable (queryable) selon n'importe quelles propriétés.   Le fait d'ajouter « Name » à cette liste signifie que nous pouvons seulement autoriser le tri du résultat requêtable par la propriété Name. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.AllowedQueryOptions">
      <summary> Obtient ou définit les paramètres de la requête qui sont autorisés dans la requête. La valeur par défaut englobe toutes les options de la requête, notamment $filter, $skip, $top, $orderby, $expand, $select, $inlineCount, $format et $skipToken. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.MaxAnyAllExpressionDepth">
      <summary> Obtient ou définit la profondeur maximale de n'importe quel élément ou de tous les éléments imbriqués dans la requête. </summary>
      <returns> Profondeur maximale de n'importe quel élément ou de tous les éléments imbriqués dans la requête. </returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.MaxNodeCount">
      <summary> Obtient ou définit le nombre maximal de noeuds dans l'arborescence de syntaxe $filter. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.MaxSkip">
      <summary> Obtient ou définit la valeur max. de $skip qu'un client peut demander. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Query.ODataValidationSettings.MaxTop">
      <summary> Obtient ou définit la valeur max. de $top qu'un client peut demander. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.OrderByItNode">
      <summary> Représente l'ordre par expression '$it' dans la clause $orderby. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByItNode.#ctor(Microsoft.Data.OData.Query.OrderByDirection)">
      <summary> Instancie une nouvelle instance de la classe <see cref="T:System.Web.Http.OData.Query.OrderByItNode" />. </summary>
      <param name="direction">
        <see cref="T:Microsoft.Data.OData.Query.OrderByDirection" /> pour ce noeud.</param>
    </member>
    <member name="T:System.Web.Http.OData.Query.OrderByNode">
      <summary> Représente un ordre unique par expression dans la clause $orderby. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByNode.#ctor(Microsoft.Data.OData.Query.OrderByDirection)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Http.OData.Query.OrderByNode" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByNode.CreateCollection(Microsoft.Data.OData.Query.SemanticAst.OrderByClause)">
      <summary> Crée une collection d'instances <see cref="T:System.Web.Http.OData.Query.OrderByPropertyNode" /> à partir d'une liste liée d'instances <see cref="T:Microsoft.Data.OData.Query.SemanticAst.OrderByClause" />. </summary>
      <returns>Collection de nouvelles instances <see cref="T:System.Web.Http.OData.Query.OrderByPropertyNode" />.</returns>
      <param name="orderByClause">Tête de la liste liée <see cref="T:Microsoft.Data.OData.Query.SemanticAst.OrderByClause" />.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.OrderByNode.Direction">
      <summary> Obtient l'instance <see cref="T:Microsoft.Data.OData.Query.OrderByDirection" /> pour le noeud actuel. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.OrderByPropertyNode">
      <summary>Représente un tri par expression <see cref="T:Microsoft.Data.Edm.IEdmProperty" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByPropertyNode.#ctor(Microsoft.Data.Edm.IEdmProperty,Microsoft.Data.OData.Query.OrderByDirection)">
      <summary>Instancie une nouvelle instance de la classe <see cref="T:System.Web.Http.OData.Query.OrderByPropertyNode" />.</summary>
      <param name="property">
        <see cref="T:Microsoft.Data.Edm.IEdmProperty" /> pour ce noeud.</param>
      <param name="direction">
        <see cref="T:Microsoft.Data.OData.Query.OrderByDirection" /> pour ce noeud.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.OrderByPropertyNode.Property">
      <summary>Obtient l'instance <see cref="T:Microsoft.Data.Edm.IEdmProperty" /> pour le noeud actuel.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.OrderByQueryOption">
      <summary>Définit une option de requête OData $orderby pour les requêtes.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByQueryOption.#ctor(System.String,System.Web.Http.OData.ODataQueryContext)">
      <summary>Initialise une nouvelle instance de <see cref="T:System.Web.Http.OData.Query.OrderByQueryOption" /> sur la base de la valeur brute $orderby et d'un EdmModel à partir de <see cref="T:System.Web.Http.OData.ODataQueryContext" /> .</summary>
      <param name="rawValue">Valeur brute pour la requête $orderby. La valeur peut être null ou vide.</param>
      <param name="context">L'instance <see cref="T:System.Web.Http.OData.ODataQueryContext" /> contenant <see cref="T:Microsoft.Data.Edm.IEdmModel" /> et un certain type d'informations</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByQueryOption.ApplyTo(System.Linq.IQueryable)">
      <summary>Applique la requête $orderby au IQueryable donné.</summary>
      <returns>Requête à laquelle la requête orderby est appliquée.</returns>
      <param name="query">IQueryable auquel la requête orderby est appliquée.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByQueryOption.ApplyTo``1(System.Linq.IQueryable{``0})">
      <summary>  Applique la requête $orderby au IQueryable donné.</summary>
      <returns>Requête à laquelle la requête orderby est appliquée.</returns>
      <param name="query">IQueryable auquel la requête orderby est appliquée.</param>
      <typeparam name="T"></typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Query.OrderByQueryOption.Context">
      <summary>Obtient l'instance <see cref="T:System.Web.Http.OData.ODataQueryContext" /> donnée.</summary>
      <returns>Retourne <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.OrderByQueryOption.OrderByNodes">
      <summary>Obtient la collection d'instances <see cref="T:System.Web.Http.OData.Query.OrderByPropertyNode" /> pour le <see cref="T:System.Web.Http.OData.Query.OrderByQueryOption" /> actuel.</summary>
      <returns>Retourne <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.OrderByQueryOption.RawValue">
      <summary>Obtient la valeur $orderby brute.</summary>
      <returns>Retourne <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Query.OrderByQueryOption.Validate(System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Valider la requête orderby sur la base de l'instance <paramref name="validationSettings" /> donnée. Lève une ODataException en cas d'échec de la validation.</summary>
      <param name="validationSettings">L'instance <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" /> contenant tous les paramètres de validation.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.OrderByQueryOption.Validator">
      <summary>Obtient ou définit le validateur de requête OrderBy.</summary>
      <returns>Retourne <see cref="T:System.Web.Http.OData.Query.Validators.OrderByQueryValidator" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Query.QueryFilterProvider">
      <summary>Implémentation de l'instance <see cref="T:System.Web.Http.Filters.IFilterProvider" /> qui applique un filtre d'action à n'importe quelle action avec un type de retour <see cref="T:System.Linq.IQueryable" /> ou <see cref="T:System.Linq.IQueryable`1" /> qui ne lie pas un paramètre de type <see cref="T:System.Web.Http.OData.Query.ODataQueryOptions" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.QueryFilterProvider.#ctor(System.Web.Http.Filters.IActionFilter)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Http.OData.Query.QueryFilterProvider" />.</summary>
      <param name="queryFilter">Filtre d'action qui exécute la requête.</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.QueryFilterProvider.GetFilters(System.Web.Http.HttpConfiguration,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Fournit les filtres qui s'appliquent à l'action spécifiée.</summary>
      <returns>Filtres qui s'appliquent à l'action spécifiée.</returns>
      <param name="configuration">Configuration du serveur.</param>
      <param name="actionDescriptor">Descripteur d'action de l'action à laquelle il faut fournir des filtres.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.QueryFilterProvider.QueryFilter">
      <summary>Obtient le filtre d'action qui exécute la requête.</summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.SkipQueryOption">
      <summary>Définit une option de requête OData $skip pour les requêtes.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.SkipQueryOption.#ctor(System.String,System.Web.Http.OData.ODataQueryContext)">
      <summary>Initialise une nouvelle instance de <see cref="T:System.Web.Http.OData.Query.SkipQueryOption" /> sur la base de la valeur brute $skip et d'un EdmModel à partir de <see cref="T:System.Web.Http.OData.ODataQueryContext" /> .</summary>
      <param name="rawValue">Valeur brute pour la requête $skip. La valeur peut être null ou vide.</param>
      <param name="context">L'instance <see cref="T:System.Web.Http.OData.ODataQueryContext" /> contenant <see cref="T:Microsoft.Data.Edm.IEdmModel" /> et un certain type d'informations</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.SkipQueryOption.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings)">
      <returns>Retourne <see cref="T:System.Linq.IQueryable" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Query.SkipQueryOption.ApplyTo``1(System.Linq.IQueryable{``0},System.Web.Http.OData.Query.ODataQuerySettings)">
      <returns>Retourne <see cref="T:System.Linq.IQueryable`1" />.</returns>
      <typeparam name="T"></typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Query.SkipQueryOption.Context">
      <summary>Obtient l'instance <see cref="T:System.Web.Http.OData.ODataQueryContext" /> donnée.</summary>
      <returns>Retourne <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.SkipQueryOption.RawValue">
      <summary>Obtient la valeur $skip brute.</summary>
      <returns>Retourne <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Query.SkipQueryOption.Validate(System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Valider la requête Skip sur la base de l'instance <paramref name="validationSettings" /> donnée. Lève une ODataException en cas d'échec de la validation.</summary>
      <param name="validationSettings">L'instance <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" /> contenant tous les paramètres de validation.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.SkipQueryOption.Validator">
      <summary>  Obtient ou définit le validateur de requête Skip.</summary>
      <returns>Retourne <see cref="T:System.Web.Http.OData.Query.Validators.SkipQueryValidator" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.SkipQueryOption.Value">
      <summary>Obtient la valeur de $skip en tant qu'entier analysé.</summary>
      <returns>Retourne <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Query.TopQueryOption">
      <summary>Définit une option de requête OData $top pour les requêtes.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.TopQueryOption.#ctor(System.String,System.Web.Http.OData.ODataQueryContext)">
      <summary>Initialise une nouvelle instance de <see cref="T:System.Web.Http.OData.Query.TopQueryOption" /> sur la base de la valeur brute $top et d'un EdmModel à partir de <see cref="T:System.Web.Http.OData.ODataQueryContext" /> .</summary>
      <param name="rawValue">Valeur brute pour la requête $top. La valeur peut être null ou vide.</param>
      <param name="context">L'instance <see cref="T:System.Web.Http.OData.ODataQueryContext" /> contenant <see cref="T:Microsoft.Data.Edm.IEdmModel" /> et un certain type d'informations</param>
    </member>
    <member name="M:System.Web.Http.OData.Query.TopQueryOption.ApplyTo(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQuerySettings)">
      <returns>Retourne <see cref="T:System.Linq.IQueryable" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Query.TopQueryOption.ApplyTo``1(System.Linq.IQueryable{``0},System.Web.Http.OData.Query.ODataQuerySettings)">
      <returns>Retourne <see cref="T:System.Linq.IOrderedQueryable`1" />.</returns>
      <typeparam name="T"></typeparam>
    </member>
    <member name="P:System.Web.Http.OData.Query.TopQueryOption.Context">
      <summary>Obtient l'instance <see cref="T:System.Web.Http.OData.ODataQueryContext" /> donnée.</summary>
      <returns>Retourne <see cref="T:System.Web.Http.OData.ODataQueryContext" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.TopQueryOption.RawValue">
      <summary>Obtient la valeur $top brute.</summary>
      <returns>Retourne <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Query.TopQueryOption.Validate(System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Valider la requête Top sur la base de l'instance <paramref name="validationSettings" /> donnée. Lève une ODataException en cas d'échec de la validation.</summary>
      <param name="validationSettings">L'instance <see cref="T:System.Web.Http.OData.Query.ODataValidationSettings" /> contenant tous les paramètres de validation.</param>
    </member>
    <member name="P:System.Web.Http.OData.Query.TopQueryOption.Validator">
      <summary>Obtient ou définit le validateur de requête Top.</summary>
      <returns>Retourne <see cref="T:System.Web.Http.OData.Query.Validators.TopQueryValidator" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Query.TopQueryOption.Value">
      <summary>Obtient la valeur de $top en tant qu'entier analysé.</summary>
      <returns>Retourne <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Query.Validators.FilterQueryValidator">
      <summary> Définit une classe validator utilisée pour valider un FilterQueryOption en fonction des paramètres.  </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Http.OData.Query.Validators.FilterQueryValidator" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.Validate(System.Web.Http.OData.Query.FilterQueryOption,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Point d'entrée de cette classe validator. Utilisez cette méthode pour valider FilterQueryOption. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateAllNode(Microsoft.Data.OData.Query.SemanticAst.AllNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Substituez cette méthode pour restreindre la requête 'all' dans la requête du filtre.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateAnyNode(Microsoft.Data.OData.Query.SemanticAst.AnyNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Substituez cette méthode pour restreindre la requête 'any' dans la requête du filtre.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateArithmeticOperator(Microsoft.Data.OData.Query.SemanticAst.BinaryOperatorNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Substituez cette méthode pour les opérateurs arithmétiques, notamment add, sub, mul, div, mod. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateBinaryOperatorNode(Microsoft.Data.OData.Query.SemanticAst.BinaryOperatorNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary>Substituez cette méthode pour restreindre les opérateurs binaires dans la requête du filtre. Cela inclut tous les opérateurs logiques sauf 'not' et tous les opérateurs mathématiques. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateCollectionPropertyAccessNode(Microsoft.Data.OData.Query.SemanticAst.CollectionPropertyAccessNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Substituez cette méthode pour valider l'accesseur de propriété de la collection. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateConstantNode(Microsoft.Data.OData.Query.SemanticAst.ConstantNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Substituez cette méthode pour restreindre 'constant' dans la requête du filtre. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateConvertNode(Microsoft.Data.OData.Query.SemanticAst.ConvertNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Substituez cette méthode pour restreindre 'cast' dans la requête du filtre. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateEntityCollectionCastNode(Microsoft.Data.OData.Query.SemanticAst.EntityCollectionCastNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Substituez cette méthode si vous voulez valider des casts sur des collections d'entités. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateLogicalOperator(Microsoft.Data.OData.Query.SemanticAst.BinaryOperatorNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Substituez cette méthode pour valider des LogicalOperators comme 'eq', 'ne', 'gt', 'ge', 'lt', 'le', 'and', 'or'.  À noter que 'not' n'est pas inclus ici. Substituez ValidateUnaryOperatorNode pour personnaliser 'not'. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateNavigationPropertyNode(Microsoft.Data.OData.Query.SemanticAst.QueryNode,Microsoft.Data.Edm.IEdmNavigationProperty,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Substituez cette méthode pour le noeud de propriété de navigation. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateQueryNode(Microsoft.Data.OData.Query.SemanticAst.QueryNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Substituez cette méthode si vous voulez visiter chaque noeud de la requête.  </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateRangeVariable(Microsoft.Data.OData.Query.SemanticAst.RangeVariable,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Substituez cette méthode pour valider le paramètre utilisé dans la requête du filtre. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateSingleEntityCastNode(Microsoft.Data.OData.Query.SemanticAst.SingleEntityCastNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Substituez cette méthode si vous voulez valider des casts sur des entités uniques. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateSingleValueFunctionCallNode(Microsoft.Data.OData.Query.SingleValueFunctionCallNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Substituez cette méthode pour valider des appels de fonction (Function), comme 'length', 'years', etc. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateSingleValuePropertyAccessNode(Microsoft.Data.OData.Query.SemanticAst.SingleValuePropertyAccessNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Substituez cette méthode pour valider l'accesseur de propriété </summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.FilterQueryValidator.ValidateUnaryOperatorNode(Microsoft.Data.OData.Query.SemanticAst.UnaryOperatorNode,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Substituez cette méthode pour valider l'opérateur Not </summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.Validators.ODataQueryValidator"></member>
    <member name="M:System.Web.Http.OData.Query.Validators.ODataQueryValidator.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Http.OData.Query.Validators.ODataQueryValidator" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.ODataQueryValidator.Validate(System.Web.Http.OData.Query.ODataQueryOptions,System.Web.Http.OData.Query.ODataValidationSettings)">
      <summary> Valider si l'instance ODataQueryOption suit ce qui se trouve dans AllowedQueryOptions. Par défaut, les quatre opérateurs sont autorisés. </summary>
    </member>
    <member name="T:System.Web.Http.OData.Query.Validators.OrderByQueryValidator"></member>
    <member name="M:System.Web.Http.OData.Query.Validators.OrderByQueryValidator.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Http.OData.Query.Validators.OrderByQueryValidator" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.OrderByQueryValidator.Validate(System.Web.Http.OData.Query.OrderByQueryOption,System.Web.Http.OData.Query.ODataValidationSettings)"></member>
    <member name="T:System.Web.Http.OData.Query.Validators.SkipQueryValidator"></member>
    <member name="M:System.Web.Http.OData.Query.Validators.SkipQueryValidator.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Http.OData.Query.Validators.SkipQueryValidator" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.SkipQueryValidator.Validate(System.Web.Http.OData.Query.SkipQueryOption,System.Web.Http.OData.Query.ODataValidationSettings)"></member>
    <member name="T:System.Web.Http.OData.Query.Validators.TopQueryValidator"></member>
    <member name="M:System.Web.Http.OData.Query.Validators.TopQueryValidator.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Http.OData.Query.Validators.TopQueryValidator" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Query.Validators.TopQueryValidator.Validate(System.Web.Http.OData.Query.TopQueryOption,System.Web.Http.OData.Query.ODataValidationSettings)"></member>
    <member name="T:System.Web.Http.OData.Routing.ActionPathSegment">
      <summary>Implémentation de l'instance <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" /> représentant une invocation d'action.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ActionPathSegment.#ctor(Microsoft.Data.Edm.IEdmFunctionImport)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Http.OData.Routing.ActionPathSegment" />.</summary>
      <param name="action">Action invoquée.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ActionPathSegment.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Http.OData.Routing.ActionPathSegment" />.</summary>
      <param name="actionName">Nom de l'action.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ActionPathSegment.Action">
      <summary>Obtient l'action invoquée.</summary>
      <returns>Retourne <see cref="T:Microsoft.Data.Edm.IEdmFunctionImport" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ActionPathSegment.ActionName">
      <summary>Obtient le nom de l'action.</summary>
      <returns>Retourne <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ActionPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Obtient le type EDM pour ce segment.</summary>
      <returns>Type EDM pour ce segment.</returns>
      <param name="previousEdmType">Type EDM du segment du chemin d'accès précédent.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ActionPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Obtient le jeu d'entités pour ce segment.</summary>
      <returns>Jeu d'entités pour ce segment.</returns>
      <param name="previousEntitySet">Jeu d'entités du segment du chemin d'accès précédent.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ActionPathSegment.SegmentKind">
      <summary>Obtient le genre de segment pour le segment actuel.</summary>
      <returns>Retourne <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ActionPathSegment.ToString">
      <summary>Retourne une <see cref="T:System.String" /> qui représente cette instance.</summary>
      <returns>
        <see cref="T:System.String" /> qui représente cette instance.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.BatchPathSegment">
      <summary>Implémentation de l'instance <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" /> représentant un segment $batch.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.BatchPathSegment.#ctor"></member>
    <member name="M:System.Web.Http.OData.Routing.BatchPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>   Obtient le type EDM pour ce segment.</summary>
      <returns>Type EDM pour ce segment.</returns>
      <param name="previousEdmType">Type EDM du segment du chemin d'accès précédent.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.BatchPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Obtient le jeu d'entités pour ce segment.</summary>
      <returns>Jeu d'entités pour ce segment.</returns>
      <param name="previousEntitySet">Jeu d'entités du segment du chemin d'accès précédent.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.BatchPathSegment.SegmentKind">
      <summary>Obtient le genre de segment pour le segment actuel.</summary>
      <returns>Retourne <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.BatchPathSegment.ToString">
      <summary>Retourne une <see cref="T:System.String" /> qui représente cette instance.</summary>
      <returns>
        <see cref="T:System.String" /> qui représente cette instance.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.CastPathSegment">
      <summary>Implémentation de <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" /> représentant un cast.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.CastPathSegment.#ctor(Microsoft.Data.Edm.IEdmEntityType)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Http.OData.Routing.CastPathSegment" />.</summary>
      <param name="castType">Type du cast.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.CastPathSegment.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Http.OData.Routing.CastPathSegment" />.</summary>
      <param name="castTypeName">Nom du type du cast.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.CastPathSegment.CastType">
      <summary>Obtient le type du cast.</summary>
      <returns>Retourne <see cref="T:Microsoft.Data.Edm.IEdmEntityType" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.CastPathSegment.CastTypeName">
      <summary>  Obtient le nom du type du cast.</summary>
      <returns>Retourne <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.CastPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Obtient le type EDM pour ce segment.</summary>
      <returns>  Type EDM pour ce segment.</returns>
      <param name="previousEdmType">Type EDM du segment du chemin d'accès précédent.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.CastPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Obtient le jeu d'entités pour ce segment.</summary>
      <returns>Jeu d'entités pour ce segment.</returns>
      <param name="previousEntitySet">Jeu d'entités du segment du chemin d'accès précédent.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.CastPathSegment.SegmentKind">
      <summary>Obtient le genre de segment pour le segment actuel.</summary>
      <returns>Retourne <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.CastPathSegment.ToString">
      <summary>Retourne une <see cref="T:System.String" /> qui représente cette instance.</summary>
      <returns>
        <see cref="T:System.String" /> qui représente cette instance.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.DefaultODataPathHandler">
      <summary> Analyse un chemin d'accès OData en tant que <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> et convertit <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> en un lien OData. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Http.OData.Routing.DefaultODataPathHandler" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.Link(System.Web.Http.OData.Routing.ODataPath)">
      <summary> Convertit une instance de <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> en un lien OData. </summary>
      <returns> Lien OData généré. </returns>
      <param name="path">Chemin d'accès OData à convertir en un lien.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.Parse(Microsoft.Data.Edm.IEdmModel,System.String)">
      <summary> Analyse le chemin d'accès OData spécifié en tant que <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> qui contient des informations supplémentaires sur le type EDM et le jeu d'entités pour le chemin d'accès. </summary>
      <returns>Représentation analysée du chemin d'accès, ou valeur Null si le chemin d'accès ne correspond pas au modèle.</returns>
      <param name="model">Modèle à utiliser pour l'analyse du chemin d'accès.</param>
      <param name="odataPath">Chemin d'accès OData à analyser.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseAtCollection(Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
      <summary> Analyse le segment du chemin d'accès OData suivant une collection. </summary>
      <returns>Représentation analysée du segment.</returns>
      <param name="model">Modèle à utiliser pour l'analyse du chemin d'accès.</param>
      <param name="previous">Segment du chemin d'accès précédent.</param>
      <param name="previousEdmType">Type EDM du chemin d'accès OData jusqu'au segment précédent.</param>
      <param name="segment">Valeur du segment à analyser.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseAtComplex(Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
      <summary> Analyse le segment du chemin d'accès OData suivant un segment de type complexe. </summary>
      <returns>Représentation analysée du segment.</returns>
      <param name="model">Modèle à utiliser pour l'analyse du chemin d'accès.</param>
      <param name="previous">Segment du chemin d'accès précédent.</param>
      <param name="previousEdmType">Type EDM du chemin d'accès OData jusqu'au segment précédent.</param>
      <param name="segment">Valeur du segment à analyser.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseAtEntity(Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
      <summary> Analyse le segment du chemin d'accès OData suivant une entité. </summary>
      <returns>Représentation analysée du segment.</returns>
      <param name="model">Modèle à utiliser pour l'analyse du chemin d'accès.</param>
      <param name="previous">Segment du chemin d'accès précédent.</param>
      <param name="previousEdmType">Type EDM du chemin d'accès OData jusqu'au segment précédent.</param>
      <param name="segment">Valeur du segment à analyser.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseAtEntityCollection(Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
      <summary> Analyse le segment du chemin d'accès OData suivant une collection d'entités. </summary>
      <returns>Représentation analysée du segment.</returns>
      <param name="model">Modèle à utiliser pour l'analyse du chemin d'accès.</param>
      <param name="previous">Segment du chemin d'accès précédent.</param>
      <param name="previousEdmType">Type EDM du chemin d'accès OData jusqu'au segment précédent.</param>
      <param name="segment">Valeur du segment à analyser.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseAtPrimitiveProperty(Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
      <summary> Analyse le segment du chemin d'accès OData suivant une propriété primitive. </summary>
      <returns>Représentation analysée du segment.</returns>
      <param name="model">Modèle à utiliser pour l'analyse du chemin d'accès.</param>
      <param name="previous">Segment du chemin d'accès précédent.</param>
      <param name="previousEdmType">Type EDM du chemin d'accès OData jusqu'au segment précédent.</param>
      <param name="segment">Valeur du segment à analyser.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseEntrySegment(Microsoft.Data.Edm.IEdmModel,System.String)">
      <summary> Analyse le premier segment OData suivant l'URI de base du service. </summary>
      <returns>Représentation analysée du segment.</returns>
      <param name="model">Modèle à utiliser pour l'analyse du chemin d'accès.</param>
      <param name="segment">Valeur du segment à analyser.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseNextSegment(Microsoft.Data.Edm.IEdmModel,System.Web.Http.OData.Routing.ODataPathSegment,Microsoft.Data.Edm.IEdmType,System.String)">
      <summary> Analyse le segment du chemin d'accès OData suivant. </summary>
      <returns>Représentation analysée du segment.</returns>
      <param name="model">Modèle à utiliser pour l'analyse du chemin d'accès.</param>
      <param name="previous">Segment du chemin d'accès précédent.</param>
      <param name="previousEdmType">Type EDM du chemin d'accès OData jusqu'au segment précédent.</param>
      <param name="segment">Valeur du segment à analyser.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.DefaultODataPathHandler.ParseSegments(System.String)">
      <summary> Analyse le chemin d'accès OData en segments. </summary>
      <returns>Segments du chemin d'accès OData.</returns>
      <param name="odataPath">Chemin d'accès OData.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.EntitySetPathSegment">
      <summary>Implémentation de l'instance <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" /> représentant un jeu d'entités.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.EntitySetPathSegment.#ctor(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Http.OData.Routing.EntitySetPathSegment" />.</summary>
      <param name="entitySet">Jeu d'entités faisant l'objet d'un accès.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.EntitySetPathSegment.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Http.OData.Routing.EntitySetPathSegment" />.</summary>
    </member>
    <member name="P:System.Web.Http.OData.Routing.EntitySetPathSegment.EntitySet">
      <returns>Retourne <see cref="T:Microsoft.Data.Edm.IEdmEntitySet" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.EntitySetPathSegment.EntitySetName">
      <summary>Obtient le nom du jeu d'entités.</summary>
      <returns>Retourne <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.EntitySetPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>   Obtient le type EDM pour ce segment.</summary>
      <returns>Type EDM pour ce segment.</returns>
      <param name="previousEdmType">Type EDM du segment du chemin d'accès précédent.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.EntitySetPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>   Obtient le jeu d'entités pour ce segment.</summary>
      <returns>Jeu d'entités pour ce segment.</returns>
      <param name="previousEntitySet">Jeu d'entités du segment du chemin d'accès précédent.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.EntitySetPathSegment.SegmentKind">
      <summary>Obtient le genre de segment pour le segment actuel.</summary>
      <returns>Retourne <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.EntitySetPathSegment.ToString">
      <summary>Retourne une <see cref="T:System.String" /> qui représente cette instance.</summary>
      <returns>
        <see cref="T:System.String" /> qui représente cette instance.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.IODataPathHandler">
      <summary> Expose la capacité à analyser un chemin d'accès OData en tant que <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> et convertit <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> en un lien OData. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.IODataPathHandler.Link(System.Web.Http.OData.Routing.ODataPath)">
      <summary> Convertit une instance de <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> en un lien OData. </summary>
      <returns>Lien OData généré.</returns>
      <param name="path">Chemin d'accès OData à convertir en un lien.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.IODataPathHandler.Parse(Microsoft.Data.Edm.IEdmModel,System.String)">
      <summary> Analyse le chemin d'accès OData spécifié en tant que <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> qui contient des informations supplémentaires sur le type EDM et le jeu d'entités pour le chemin d'accès. </summary>
      <returns>Représentation analysée de l'URI, ou valeur Null si l'URI ne correspond pas au modèle.</returns>
      <param name="model">Modèle à utiliser pour l'analyse du chemin d'accès.</param>
      <param name="odataPath">Chemin d'accès OData à analyser.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.KeyValuePathSegment">
      <summary>Implémentation de l'instance <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" /> représentant une indexation dans une collection d'entités par clé.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.KeyValuePathSegment.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Http.OData.Routing.KeyValuePathSegment" />.</summary>
      <param name="value">Valeur clé à utiliser pour l'indexation dans la collection.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.KeyValuePathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Obtient le type EDM pour ce segment.</summary>
      <returns>Type EDM pour ce segment.</returns>
      <param name="previousEdmType">Type EDM du segment du chemin d'accès précédent.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.KeyValuePathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Obtient le jeu d'entités pour ce segment.</summary>
      <returns>Jeu d'entités pour ce segment.</returns>
      <param name="previousEntitySet">Jeu d'entités du segment du chemin d'accès précédent.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.KeyValuePathSegment.SegmentKind">
      <summary>Obtient le genre de segment pour le segment actuel.</summary>
      <returns>Retourne <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.KeyValuePathSegment.ToString">
      <summary>Retourne une <see cref="T:System.String" /> qui représente cette instance.</summary>
      <returns>
        <see cref="T:System.String" /> qui représente cette instance.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.KeyValuePathSegment.Value">
      <summary>Obtient la valeur clé à utiliser pour l'indexation dans la collection.</summary>
      <returns>Retourne <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.LinksPathSegment">
      <summary>Implémentation de l'instance <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" /> représentant un segment $links.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.LinksPathSegment.#ctor"></member>
    <member name="M:System.Web.Http.OData.Routing.LinksPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>  Obtient le type EDM pour ce segment.</summary>
      <returns>Type EDM pour ce segment.</returns>
      <param name="previousEdmType">Type EDM du segment du chemin d'accès précédent.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.LinksPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Obtient le jeu d'entités pour ce segment.</summary>
      <returns>Jeu d'entités pour ce segment.</returns>
      <param name="previousEntitySet">Jeu d'entités du segment du chemin d'accès précédent.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.LinksPathSegment.SegmentKind">
      <summary>Obtient le genre de segment pour le segment actuel.</summary>
      <returns>Retourne <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.LinksPathSegment.ToString">
      <summary>Retourne une <see cref="T:System.String" /> qui représente cette instance.</summary>
      <returns>
        <see cref="T:System.String" /> qui représente cette instance.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.MetadataPathSegment">
      <summary>Implémentation de l'instance <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" /> représentant un segment $metadata.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.MetadataPathSegment.#ctor"></member>
    <member name="M:System.Web.Http.OData.Routing.MetadataPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>  Obtient le type EDM pour ce segment.</summary>
      <returns>Type EDM pour ce segment.</returns>
      <param name="previousEdmType">Type EDM du segment du chemin d'accès précédent.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.MetadataPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>  Obtient le jeu d'entités pour ce segment.</summary>
      <returns>Jeu d'entités pour ce segment.</returns>
      <param name="previousEntitySet">Jeu d'entités du segment du chemin d'accès précédent.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.MetadataPathSegment.SegmentKind">
      <summary>Obtient le genre de segment pour le segment actuel.</summary>
      <returns>Retourne <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.MetadataPathSegment.ToString">
      <summary>Retourne une <see cref="T:System.String" /> qui représente cette instance.</summary>
      <returns>
        <see cref="T:System.String" /> qui représente cette instance.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.NavigationPathSegment">
      <summary>Implémentation de l'instance <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" /> représentant une navigation.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.NavigationPathSegment.#ctor(Microsoft.Data.Edm.IEdmNavigationProperty)">
      <summary>  Initialise une nouvelle instance de la classe <see cref="T:System.Web.Http.OData.Routing.NavigationPathSegment" />.</summary>
      <param name="navigationProperty">Propriété de navigation accédée par ce segment.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.NavigationPathSegment.#ctor(System.String)">
      <summary>  Initialise une nouvelle instance de la classe <see cref="T:System.Web.Http.OData.Routing.NavigationPathSegment" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.NavigationPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Obtient le type EDM pour ce segment.</summary>
      <returns>Type EDM pour ce segment.</returns>
      <param name="previousEdmType">Type EDM du segment du chemin d'accès précédent.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.NavigationPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Obtient le jeu d'entités pour ce segment.</summary>
      <returns>Jeu d'entités pour ce segment.</returns>
      <param name="previousEntitySet">Jeu d'entités du segment du chemin d'accès précédent.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.NavigationPathSegment.NavigationProperty">
      <summary>Obtient la propriété de navigation accédée par ce segment.</summary>
      <returns>Retourne <see cref="T:Microsoft.Data.Edm.IEdmNavigationProperty" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.NavigationPathSegment.NavigationPropertyName">
      <summary>Obtient le nom de la propriété de navigation.</summary>
      <returns>Retourne <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.NavigationPathSegment.SegmentKind">
      <summary>Obtient le genre de segment pour le segment actuel.</summary>
      <returns>Retourne <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.NavigationPathSegment.ToString">
      <summary>Retourne une <see cref="T:System.String" /> qui représente cette instance.</summary>
      <returns>
        <see cref="T:System.String" /> qui représente cette instance.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ODataActionSelector">
      <summary> Implémentation de l'instance <see cref="T:System.Web.Http.Controllers.IHttpActionSelector" /> qui utilise les conventions d'itinéraire OData du serveur pour sélectionner une action pour les demandes OData. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataActionSelector.#ctor(System.Web.Http.Controllers.IHttpActionSelector)">
      <summary> Initialise une nouvelle instance de la classe <see cref="T:System.Web.Http.OData.Routing.ODataActionSelector" />. </summary>
      <param name="innerSelector">Sélecteur de contrôleur interne à appeler.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataActionSelector.GetActionMapping(System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary> Retourne un mappage, indexé par chaîne d'action, de tous les <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" /> que le sélecteur peut sélectionner.  Cette option est principalement appelée par <see cref="T:System.Web.Http.Description.IApiExplorer" /> pour découvrir toutes les actions possibles dans le contrôleur. </summary>
      <returns> Mappage de <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" /> que le sélecteur peut sélectionner, ou valeur null si celui-ci ne dispose pas d'un mappage bien défini de <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" />. </returns>
      <param name="controllerDescriptor">Descripteur du contrôleur.</param>
      <exception cref="T:System.NotImplementedException"></exception>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataActionSelector.SelectAction(System.Web.Http.Controllers.HttpControllerContext)">
      <summary> Sélectionne une action pour le <see cref="T:System.Web.Http.Controllers.ApiControllerActionSelector" />. </summary>
      <returns> Action sélectionnée. </returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ODataPath">
      <summary>Fournit une représentation d'objet pour un chemin d'accès OData avec des informations supplémentaires sur le type EDM et le jeu d'entités pour le chemin d'accès.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPath.#ctor(System.Collections.Generic.IList{System.Web.Http.OData.Routing.ODataPathSegment})">
      <summary>  Initialise une nouvelle instance de la classe <see cref="T:System.Web.Http.OData.Routing.ODataPath" />.</summary>
      <param name="segments">Segments de chemin d'accès du chemin d'accès.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPath.#ctor(System.Web.Http.OData.Routing.ODataPathSegment[])">
      <summary>  Initialise une nouvelle instance de la classe <see cref="T:System.Web.Http.OData.Routing.ODataPath" />.</summary>
      <param name="segments">Segments de chemin d'accès du chemin d'accès.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPath.EdmType">
      <summary>Obtient ou définit le type EDM du chemin d'accès.</summary>
      <returns>Retourne <see cref="T:Microsoft.Data.Edm.IEdmType" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPath.EntitySet">
      <summary>Obtient ou définit le jeu d'entités du chemin d'accès.</summary>
      <returns>Retourne <see cref="T:Microsoft.Data.Edm.IEdmEntitySet" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPath.PathTemplate">
      <summary>Obtient le modèle du chemin d'accès décrivant les types des segments dans le chemin d'accès.</summary>
      <returns>Retourne <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPath.Segments">
      <summary>Obtient les segments du chemin d'accès pour le chemin d'accès OData.</summary>
      <returns>Retourne <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPath.ToString">
      <returns>Retourne <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ODataPathParameterBindingAttribute">
      <summary> Implémentation de l'instance <see cref="T:System.Web.Http.ParameterBindingAttribute" /> utilisée pour lier une instance de <see cref="T:System.Web.Http.OData.Routing.ODataPath" /> en tant que paramètre d'action. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathParameterBindingAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Http.OData.Routing.ODataPathParameterBindingAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathParameterBindingAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary> Obtient la liaison de paramètre. </summary>
      <returns> Liaison de paramètre. </returns>
      <param name="parameter">Description du paramètre.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ODataPathRouteConstraint">
      <summary> Implémentation de <see cref="T:System.Web.Http.Routing.IHttpRouteConstraint" /> qui correspond uniquement aux chemins d'accès OData. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathRouteConstraint.#ctor(System.Web.Http.OData.Routing.IODataPathHandler,Microsoft.Data.Edm.IEdmModel,System.String,System.Collections.Generic.IEnumerable{System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention})">
      <summary> Initialise une nouvelle instance de la classe <see cref="T:System.Web.Http.OData.Routing.ODataPathRouteConstraint" />. </summary>
      <param name="pathHandler">Gestionnaire de chemin d'accès OData à utiliser pour l'analyse.</param>
      <param name="model">Modèle EDM à utiliser pour l'analyse du chemin d'accès.</param>
      <param name="routeName">Nom de l'itinéraire auquel cette contrainte est associée.</param>
      <param name="routingConventions">Conventions d'itinéraire OData à utiliser pour la sélection du nom du contrôleur.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPathRouteConstraint.EdmModel">
      <summary> Obtient le modèle EDM à utiliser pour l'analyse du chemin d'accès. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary> Indique si cette instance correspond à un itinéraire spécifié. </summary>
      <returns> True si cette instance correspond à un itinéraire spécifié ; sinon, False. </returns>
      <param name="request">Demande.</param>
      <param name="route">Itinéraire à comparer.</param>
      <param name="parameterName">Nom du paramètre.</param>
      <param name="values">Liste de valeurs de paramètre.</param>
      <param name="routeDirection">Sens de l'itinéraire.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPathRouteConstraint.PathHandler">
      <summary> Obtient le gestionnaire du chemin d'accès OData à utiliser pour l'analyse. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPathRouteConstraint.RouteName">
      <summary> Obtient le nom de l'itinéraire auquel cette contrainte est associée. </summary>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPathRouteConstraint.RoutingConventions">
      <summary> Obtient les conventions d'itinéraire OData à utiliser pour la sélection du nom du contrôleur. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathRouteConstraint.SelectControllerName(System.Web.Http.OData.Routing.ODataPath,System.Net.Http.HttpRequestMessage)">
      <summary> Sélectionne le nom du contrôleur auquel envoyer la demande. </summary>
      <returns>Nom du contrôleur auquel effectuer le transfert, ou valeur Null s'il est impossible à résoudre.</returns>
      <param name="path">Chemin d'accès OData de la demande.</param>
      <param name="request">Demande.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ODataPathSegment">
      <summary>Fournit une représentation d'objet pour un segment de chemin d'accès OData avec des informations supplémentaires sur le type EDM et le jeu d'entités pour le chemin d'accès.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathSegment.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Obtient le type EDM pour ce segment.</summary>
      <returns>Type EDM pour ce segment.</returns>
      <param name="previousEdmType">Type EDM du segment du chemin d'accès précédent.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ODataPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>  Obtient le jeu d'entités pour ce segment.</summary>
      <returns>Jeu d'entités pour ce segment.</returns>
      <param name="previousEntitySet">Jeu d'entités du segment du chemin d'accès précédent.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ODataPathSegment.SegmentKind">
      <summary>Obtient le genre de segment pour le segment actuel.</summary>
      <returns>Retourne <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ODataRouteConstants"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.Action"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.ConstraintName"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.Controller"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.Key"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.NavigationProperty"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.ODataPath"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.ODataPathTemplate"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataRouteConstants.RelatedKey"></member>
    <member name="T:System.Web.Http.OData.Routing.ODataSegmentKinds">
      <summary>Fournit les valeurs des genres de segment pour les implémentations de l'instance <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" /> .</summary>
    </member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Action"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Batch"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Cast"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.EntitySet"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Key"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Links"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Metadata"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Navigation"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Property"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.ServiceBase"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Unresolved"></member>
    <member name="F:System.Web.Http.OData.Routing.ODataSegmentKinds.Value"></member>
    <member name="T:System.Web.Http.OData.Routing.PropertyAccessPathSegment">
      <summary>Implémentation de <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" /> représentant un accès propriété.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.PropertyAccessPathSegment.#ctor(Microsoft.Data.Edm.IEdmProperty)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Http.OData.Routing.PropertyAccessPathSegment" />.</summary>
      <param name="property">Propriété accédée par ce segment.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.PropertyAccessPathSegment.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Http.OData.Routing.PropertyAccessPathSegment" />.</summary>
      <param name="propertyName">Nom de la propriété.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.PropertyAccessPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Obtient le type EDM pour ce segment.</summary>
      <returns>Type EDM pour ce segment.</returns>
      <param name="previousEdmType">Type EDM du segment du chemin d'accès précédent.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.PropertyAccessPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>  Obtient le jeu d'entités pour ce segment.</summary>
      <returns>Jeu d'entités pour ce segment.</returns>
      <param name="previousEntitySet">Jeu d'entités du segment du chemin d'accès précédent.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.PropertyAccessPathSegment.Property">
      <summary>Obtient la propriété de la propriété accédée par ce segment.</summary>
      <returns>Retourne <see cref="T:Microsoft.Data.Edm.IEdmProperty" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.PropertyAccessPathSegment.PropertyName">
      <summary>Obtient le nom de la propriété.</summary>
      <returns>Retourne <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.PropertyAccessPathSegment.SegmentKind">
      <summary>Obtient le genre de segment pour le segment actuel.</summary>
      <returns>Retourne <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.PropertyAccessPathSegment.ToString">
      <summary>Retourne une <see cref="T:System.String" /> qui représente cette instance.</summary>
      <returns>
        <see cref="T:System.String" /> qui représente cette instance.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.UnresolvedPathSegment">
      <summary>Implémentation de l'instance <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" /> représentant un segment qui n'a pas pu être résolu.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.UnresolvedPathSegment.#ctor(System.String)">
      <summary>  Initialise une nouvelle instance de la classe <see cref="T:System.Web.Http.OData.Routing.UnresolvedPathSegment" />.</summary>
      <param name="segmentValue">Valeur du segment non résolu.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.UnresolvedPathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <returns>Type EDM du segment du chemin d'accès précédent.</returns>
      <param name="previousEdmType">Obtient le type EDM pour ce segment.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.UnresolvedPathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Obtient le jeu d'entités pour ce segment.</summary>
      <returns>Jeu d'entités pour ce segment.</returns>
      <param name="previousEntitySet">Jeu d'entités du segment du chemin d'accès précédent.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.UnresolvedPathSegment.SegmentKind">
      <summary>Obtient le genre de segment pour le segment actuel.</summary>
      <returns>Retourne <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.OData.Routing.UnresolvedPathSegment.SegmentValue">
      <summary>Obtient la valeur du segment non résolu.</summary>
      <returns>Retourne <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.UnresolvedPathSegment.ToString">
      <summary>Retourne une <see cref="T:System.String" /> qui représente cette instance.</summary>
      <returns>
        <see cref="T:System.String" /> qui représente cette instance.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.ValuePathSegment">
      <summary>Implémentation de l'instance <see cref="T:System.Web.Http.OData.Routing.ODataPathSegment" /> représentant un segment $value.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ValuePathSegment.#ctor"></member>
    <member name="M:System.Web.Http.OData.Routing.ValuePathSegment.GetEdmType(Microsoft.Data.Edm.IEdmType)">
      <summary>Obtient le type EDM pour ce segment.</summary>
      <returns>Type EDM pour ce segment.</returns>
      <param name="previousEdmType">Type EDM du segment du chemin d'accès précédent.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ValuePathSegment.GetEntitySet(Microsoft.Data.Edm.IEdmEntitySet)">
      <summary>Obtient le jeu d'entités pour ce segment.</summary>
      <returns>Jeu d'entités pour ce segment.</returns>
      <param name="previousEntitySet">Jeu d'entités du segment du chemin d'accès précédent.</param>
    </member>
    <member name="P:System.Web.Http.OData.Routing.ValuePathSegment.SegmentKind">
      <summary>Obtient le genre de segment pour le segment actuel.</summary>
      <returns>Retourne <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.Http.OData.Routing.ValuePathSegment.ToString">
      <summary>Retourne une <see cref="T:System.String" /> qui représente cette instance.</summary>
      <returns>
        <see cref="T:System.String" /> qui représente cette instance.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.ActionRoutingConvention">
      <summary> Implémentation de l'instance <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" /> qui gère les invocations des actions. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.ActionRoutingConvention.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Http.OData.Routing.Conventions.ActionRoutingConvention" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.ActionRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary> Sélectionne l'action pour les demandes OData. </summary>
      <returns>Valeur Null si la demande n'est pas gérée par cette convention ; autrement, le nom de l'action sélectionnée </returns>
      <param name="odataPath">Chemin d'accès OData.</param>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="actionMap">Mappage de l'action.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.EntityRoutingConvention">
      <summary> Implémentation de l'instance <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" /> qui gère le fonctionnement des entités par clé. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.EntityRoutingConvention.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Http.OData.Routing.Conventions.EntityRoutingConvention" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.EntityRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary> Sélectionne l'action pour les demandes OData. </summary>
      <returns>Valeur Null si la demande n'est pas gérée par cette convention ; autrement, le nom de l'action sélectionnée </returns>
      <param name="odataPath">Chemin d'accès OData.</param>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="actionMap">Mappage de l'action.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.EntitySetRoutingConvention">
      <summary> Implémentation de l'instance <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" /> qui gère les jeux d'entités. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.EntitySetRoutingConvention.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Http.OData.Routing.Conventions.EntitySetRoutingConvention" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.EntitySetRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary> Sélectionne l'action pour les demandes OData. </summary>
      <returns>Valeur Null si la demande n'est pas gérée par cette convention ; autrement, le nom de l'action sélectionnée </returns>
      <param name="odataPath">Chemin d'accès OData.</param>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="actionMap">Mappage de l'action.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.EntitySetRoutingConvention.SelectController(System.Web.Http.OData.Routing.ODataPath,System.Net.Http.HttpRequestMessage)">
      <summary> Sélectionne le contrôleur pour les demandes OData. </summary>
      <returns>Valeur Null si la demande n'est pas gérée par cette convention ; autrement, le nom du contrôleur sélectionné </returns>
      <param name="odataPath">Chemin d'accès OData.</param>
      <param name="request">Demande.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention">
      <summary> Fournit une abstraction pour la sélection d'un contrôleur et d'une action pour les demandes OData. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary> Sélectionne l'action pour les demandes OData. </summary>
      <returns>Valeur Null si la demande n'est pas gérée par cette convention ; autrement, le nom de l'action sélectionnée</returns>
      <param name="odataPath">Chemin d'accès OData.</param>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="actionMap">Mappage de l'action.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention.SelectController(System.Web.Http.OData.Routing.ODataPath,System.Net.Http.HttpRequestMessage)">
      <summary> Sélectionne le contrôleur pour les demandes OData. </summary>
      <returns>Valeur Null si la demande n'est pas gérée par cette convention ; autrement, le nom du contrôleur sélectionné</returns>
      <param name="odataPath">Chemin d'accès OData.</param>
      <param name="request">Demande.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.LinksRoutingConvention">
      <summary> Implémentation de l'instance <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" /> qui gère les manipulations des liens. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.LinksRoutingConvention.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Http.OData.Routing.Conventions.LinksRoutingConvention" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.LinksRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary> Sélectionne l'action. </summary>
      <param name="odataPath">Chemin d'accès OData.</param>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="actionMap">Mappage de l'action.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.MetadataRoutingConvention">
      <summary> Implémentation de l'instance <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" /> qui gère les demandes de métadonnées OData. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.MetadataRoutingConvention.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Http.OData.Routing.Conventions.MetadataRoutingConvention" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.MetadataRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary> Sélectionne l'action pour les demandes OData. </summary>
      <returns>Valeur Null si la demande n'est pas gérée par cette convention ; autrement, le nom de l'action sélectionnée </returns>
      <param name="odataPath">Chemin d'accès OData.</param>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="actionMap">Mappage de l'action.</param>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.MetadataRoutingConvention.SelectController(System.Web.Http.OData.Routing.ODataPath,System.Net.Http.HttpRequestMessage)">
      <summary> Sélectionne le contrôleur pour les demandes OData. </summary>
      <returns>Valeur Null si la demande n'est pas gérée par cette convention ; autrement, le nom du contrôleur sélectionné </returns>
      <param name="odataPath">Chemin d'accès OData.</param>
      <param name="request">Demande.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.NavigationRoutingConvention">
      <summary> Implémentation de l'instance <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" /> qui gère les propriétés de navigation. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.NavigationRoutingConvention.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Http.OData.Routing.Conventions.NavigationRoutingConvention" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.NavigationRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary> Sélectionne l'action. </summary>
      <param name="odataPath">Chemin d'accès OData.</param>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="actionMap">Mappage de l'action.</param>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.ODataRoutingConventions">
      <summary> Fournit des méthodes d'assistance pour créer des conventions d'itinéraire. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.ODataRoutingConventions.CreateDefault">
      <summary> Crée une collection mutable des conventions d'itinéraire OData par défaut. </summary>
      <returns>Collection mutable des conventions d'itinéraire OData par défaut.</returns>
    </member>
    <member name="T:System.Web.Http.OData.Routing.Conventions.UnmappedRequestRoutingConvention">
      <summary> Implémentation de l'instance <see cref="T:System.Web.Http.OData.Routing.Conventions.IODataRoutingConvention" /> qui sélectionne toujours l'action nommée HandleUnmappedRequest si cette action est présente. </summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.UnmappedRequestRoutingConvention.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Http.OData.Routing.Conventions.UnmappedRequestRoutingConvention" />.</summary>
    </member>
    <member name="M:System.Web.Http.OData.Routing.Conventions.UnmappedRequestRoutingConvention.SelectAction(System.Web.Http.OData.Routing.ODataPath,System.Web.Http.Controllers.HttpControllerContext,System.Linq.ILookup{System.String,System.Web.Http.Controllers.HttpActionDescriptor})">
      <summary> Sélectionne l'action. </summary>
      <param name="odataPath">Chemin d'accès OData.</param>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="actionMap">Mappage de l'action.</param>
    </member>
  </members>
</doc>